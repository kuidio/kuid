/*
Copyright 2024 Nokia.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.kuidio.kuid.apis.id.v1alpha1;

// Package-wide variables from generator "generated".
option go_package = "github.com/kuidio/kuid/apis/id/v1alpha1";

message ClusterID {
  optional SiteID siteID = 1;

  // Cluster defines the name of the cluster
  optional string cluster = 2;
}

message EndpointID {
  optional NodeID nodeID = 1;

  // ModuleBay defines the moduleBay reference id
  optional uint32 moduleBay = 2;

  // Module defines the module reference id
  optional uint32 module = 3;

  // Port defines the id of the port
  optional uint32 port = 4;

  // Adaptor defines the name of the adaptor
  optional string adaptor = 5;

  // Endpoint defines the name of the endpoint
  optional uint32 endpoint = 6;
}

message NodeID {
  optional SiteID siteID = 1;

  // Node defines the name of the node
  optional string node = 2;
}

message PartitionAdaptorID {
  optional PartitionPortID nodeID = 1;

  // Adaptor defines the name of the adaptor
  optional string adaptor = 5;
}

message PartitionAttachmentID {
  // Partition defines the partition this resource belongs to
  optional string partition = 1;

  // SiteID define the siteid of the node
  optional SiteID siteID = 2;

  // Cluster defines the name of the cluster
  optional string cluster = 3;

  // Node defines the name of the node
  optional string node = 4;

  // Node defines the name of the nodeset
  optional string nodeset = 5;

  // Interface defines the name of the interface
  optional string interface = 6;
}

message PartitionClusterID {
  // Partition defines the partition this resource belongs to
  optional string partition = 1;

  // SiteID define the siteid of the node
  optional SiteID siteID = 2;

  // Cluster defines the name of the cluster
  optional string cluster = 3;
}

message PartitionEndpointID {
  optional PartitionNodeID nodeID = 1;

  // ModuleBay defines the moduleBay reference id
  optional uint32 moduleBay = 2;

  // Module defines the module reference id
  optional uint32 module = 3;

  // Port defines the id of the port
  optional uint32 port = 4;

  // Adaptor defines the name of the adaptor
  optional string adaptor = 5;

  // Endpoint defines the name of the endpoint
  optional uint32 endpoint = 6;

  // Name is used to refer to internal names of the node
  optional string name = 7;
}

message PartitionNodeID {
  // Partition defines the partition this resource belongs to
  optional string partition = 1;

  // SiteID define the siteid of the node
  optional SiteID siteID = 2;

  // Node defines the name of the node
  optional string node = 3;
}

message PartitionPortID {
  optional PartitionNodeID nodeID = 1;

  // ModuleBay defines the moduleBay reference id
  optional uint32 moduleBay = 2;

  // Module defines the module reference id
  optional uint32 module = 3;

  // Port defines the id of the port
  optional uint32 port = 4;
}

message PartitionProviderEndpointID {
  optional PartitionProviderNodeID nodeID = 2;

  // ModuleBay defines the moduleBay reference id
  optional uint32 moduleBay = 3;

  // Module defines the module reference id
  optional uint32 module = 4;

  // Port defines the id of the port
  optional uint32 port = 5;

  // Adaptor defines the name of the adaptor
  optional string adaptor = 6;

  // Endpoint defines the name of the endpoint
  optional uint32 endpoint = 7;

  // Name is used to refer to internal names of the node
  optional string name = 8;
}

message PartitionProviderNodeID {
  // Partition defines the partition this resource belongs to
  optional string partition = 1;

  // SiteID define the siteid of the node
  optional SiteID siteID = 2;

  // Node defines the name of the node
  optional string node = 3;

  // Provider defines the provider implementing this resource.
  optional string provider = 4;

  // PlatformType define the type of platform implementing the nodespec
  optional string platformType = 5;
}

message SiteID {
  // Region defines the region of the resource
  optional string region = 1;

  // Site defines the site of the resource
  optional string site = 2;
}


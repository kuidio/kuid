//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2024 Nokia.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	asv1alpha1 "github.com/kuidio/kuid/apis/backend/as/v1alpha1"
	id "github.com/kuidio/kuid/apis/id"
	idv1alpha1 "github.com/kuidio/kuid/apis/id/v1alpha1"
	infra "github.com/kuidio/kuid/apis/infra"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Adaptor)(nil), (*infra.Adaptor)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Adaptor_To_infra_Adaptor(a.(*Adaptor), b.(*infra.Adaptor), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.Adaptor)(nil), (*Adaptor)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_Adaptor_To_v1alpha1_Adaptor(a.(*infra.Adaptor), b.(*Adaptor), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AdaptorList)(nil), (*infra.AdaptorList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AdaptorList_To_infra_AdaptorList(a.(*AdaptorList), b.(*infra.AdaptorList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.AdaptorList)(nil), (*AdaptorList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_AdaptorList_To_v1alpha1_AdaptorList(a.(*infra.AdaptorList), b.(*AdaptorList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AdaptorSpec)(nil), (*infra.AdaptorSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AdaptorSpec_To_infra_AdaptorSpec(a.(*AdaptorSpec), b.(*infra.AdaptorSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.AdaptorSpec)(nil), (*AdaptorSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_AdaptorSpec_To_v1alpha1_AdaptorSpec(a.(*infra.AdaptorSpec), b.(*AdaptorSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AdaptorStatus)(nil), (*infra.AdaptorStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AdaptorStatus_To_infra_AdaptorStatus(a.(*AdaptorStatus), b.(*infra.AdaptorStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.AdaptorStatus)(nil), (*AdaptorStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_AdaptorStatus_To_v1alpha1_AdaptorStatus(a.(*infra.AdaptorStatus), b.(*AdaptorStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Cluster)(nil), (*infra.Cluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Cluster_To_infra_Cluster(a.(*Cluster), b.(*infra.Cluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.Cluster)(nil), (*Cluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_Cluster_To_v1alpha1_Cluster(a.(*infra.Cluster), b.(*Cluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterList)(nil), (*infra.ClusterList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClusterList_To_infra_ClusterList(a.(*ClusterList), b.(*infra.ClusterList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.ClusterList)(nil), (*ClusterList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_ClusterList_To_v1alpha1_ClusterList(a.(*infra.ClusterList), b.(*ClusterList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterSpec)(nil), (*infra.ClusterSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClusterSpec_To_infra_ClusterSpec(a.(*ClusterSpec), b.(*infra.ClusterSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.ClusterSpec)(nil), (*ClusterSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_ClusterSpec_To_v1alpha1_ClusterSpec(a.(*infra.ClusterSpec), b.(*ClusterSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterStatus)(nil), (*infra.ClusterStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClusterStatus_To_infra_ClusterStatus(a.(*ClusterStatus), b.(*infra.ClusterStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.ClusterStatus)(nil), (*ClusterStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_ClusterStatus_To_v1alpha1_ClusterStatus(a.(*infra.ClusterStatus), b.(*ClusterStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Endpoint)(nil), (*infra.Endpoint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Endpoint_To_infra_Endpoint(a.(*Endpoint), b.(*infra.Endpoint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.Endpoint)(nil), (*Endpoint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_Endpoint_To_v1alpha1_Endpoint(a.(*infra.Endpoint), b.(*Endpoint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EndpointList)(nil), (*infra.EndpointList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EndpointList_To_infra_EndpointList(a.(*EndpointList), b.(*infra.EndpointList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.EndpointList)(nil), (*EndpointList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_EndpointList_To_v1alpha1_EndpointList(a.(*infra.EndpointList), b.(*EndpointList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EndpointSet)(nil), (*infra.EndpointSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EndpointSet_To_infra_EndpointSet(a.(*EndpointSet), b.(*infra.EndpointSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.EndpointSet)(nil), (*EndpointSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_EndpointSet_To_v1alpha1_EndpointSet(a.(*infra.EndpointSet), b.(*EndpointSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EndpointSetList)(nil), (*infra.EndpointSetList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EndpointSetList_To_infra_EndpointSetList(a.(*EndpointSetList), b.(*infra.EndpointSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.EndpointSetList)(nil), (*EndpointSetList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_EndpointSetList_To_v1alpha1_EndpointSetList(a.(*infra.EndpointSetList), b.(*EndpointSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EndpointSetStatus)(nil), (*infra.EndpointSetStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EndpointSetStatus_To_infra_EndpointSetStatus(a.(*EndpointSetStatus), b.(*infra.EndpointSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.EndpointSetStatus)(nil), (*EndpointSetStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_EndpointSetStatus_To_v1alpha1_EndpointSetStatus(a.(*infra.EndpointSetStatus), b.(*EndpointSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EndpointSpec)(nil), (*infra.EndpointSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EndpointSpec_To_infra_EndpointSpec(a.(*EndpointSpec), b.(*infra.EndpointSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.EndpointSpec)(nil), (*EndpointSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_EndpointSpec_To_v1alpha1_EndpointSpec(a.(*infra.EndpointSpec), b.(*EndpointSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EndpointStatus)(nil), (*infra.EndpointStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EndpointStatus_To_infra_EndpointStatus(a.(*EndpointStatus), b.(*infra.EndpointStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.EndpointStatus)(nil), (*EndpointStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_EndpointStatus_To_v1alpha1_EndpointStatus(a.(*infra.EndpointStatus), b.(*EndpointStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Link)(nil), (*infra.Link)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Link_To_infra_Link(a.(*Link), b.(*infra.Link), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.Link)(nil), (*Link)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_Link_To_v1alpha1_Link(a.(*infra.Link), b.(*Link), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LinkList)(nil), (*infra.LinkList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_LinkList_To_infra_LinkList(a.(*LinkList), b.(*infra.LinkList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.LinkList)(nil), (*LinkList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_LinkList_To_v1alpha1_LinkList(a.(*infra.LinkList), b.(*LinkList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LinkSet)(nil), (*infra.LinkSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_LinkSet_To_infra_LinkSet(a.(*LinkSet), b.(*infra.LinkSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.LinkSet)(nil), (*LinkSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_LinkSet_To_v1alpha1_LinkSet(a.(*infra.LinkSet), b.(*LinkSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LinkSetList)(nil), (*infra.LinkSetList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_LinkSetList_To_infra_LinkSetList(a.(*LinkSetList), b.(*infra.LinkSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.LinkSetList)(nil), (*LinkSetList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_LinkSetList_To_v1alpha1_LinkSetList(a.(*infra.LinkSetList), b.(*LinkSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LinkSetStatus)(nil), (*infra.LinkSetStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_LinkSetStatus_To_infra_LinkSetStatus(a.(*LinkSetStatus), b.(*infra.LinkSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.LinkSetStatus)(nil), (*LinkSetStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_LinkSetStatus_To_v1alpha1_LinkSetStatus(a.(*infra.LinkSetStatus), b.(*LinkSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LinkStatus)(nil), (*infra.LinkStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_LinkStatus_To_infra_LinkStatus(a.(*LinkStatus), b.(*infra.LinkStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.LinkStatus)(nil), (*LinkStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_LinkStatus_To_v1alpha1_LinkStatus(a.(*infra.LinkStatus), b.(*LinkStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Location)(nil), (*infra.Location)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Location_To_infra_Location(a.(*Location), b.(*infra.Location), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.Location)(nil), (*Location)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_Location_To_v1alpha1_Location(a.(*infra.Location), b.(*Location), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Module)(nil), (*infra.Module)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Module_To_infra_Module(a.(*Module), b.(*infra.Module), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.Module)(nil), (*Module)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_Module_To_v1alpha1_Module(a.(*infra.Module), b.(*Module), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ModuleBay)(nil), (*infra.ModuleBay)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ModuleBay_To_infra_ModuleBay(a.(*ModuleBay), b.(*infra.ModuleBay), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.ModuleBay)(nil), (*ModuleBay)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_ModuleBay_To_v1alpha1_ModuleBay(a.(*infra.ModuleBay), b.(*ModuleBay), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ModuleBayList)(nil), (*infra.ModuleBayList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ModuleBayList_To_infra_ModuleBayList(a.(*ModuleBayList), b.(*infra.ModuleBayList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.ModuleBayList)(nil), (*ModuleBayList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_ModuleBayList_To_v1alpha1_ModuleBayList(a.(*infra.ModuleBayList), b.(*ModuleBayList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ModuleBaySpec)(nil), (*infra.ModuleBaySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ModuleBaySpec_To_infra_ModuleBaySpec(a.(*ModuleBaySpec), b.(*infra.ModuleBaySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.ModuleBaySpec)(nil), (*ModuleBaySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_ModuleBaySpec_To_v1alpha1_ModuleBaySpec(a.(*infra.ModuleBaySpec), b.(*ModuleBaySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ModuleBayStatus)(nil), (*infra.ModuleBayStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ModuleBayStatus_To_infra_ModuleBayStatus(a.(*ModuleBayStatus), b.(*infra.ModuleBayStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.ModuleBayStatus)(nil), (*ModuleBayStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_ModuleBayStatus_To_v1alpha1_ModuleBayStatus(a.(*infra.ModuleBayStatus), b.(*ModuleBayStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ModuleList)(nil), (*infra.ModuleList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ModuleList_To_infra_ModuleList(a.(*ModuleList), b.(*infra.ModuleList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.ModuleList)(nil), (*ModuleList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_ModuleList_To_v1alpha1_ModuleList(a.(*infra.ModuleList), b.(*ModuleList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ModuleSpec)(nil), (*infra.ModuleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ModuleSpec_To_infra_ModuleSpec(a.(*ModuleSpec), b.(*infra.ModuleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.ModuleSpec)(nil), (*ModuleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_ModuleSpec_To_v1alpha1_ModuleSpec(a.(*infra.ModuleSpec), b.(*ModuleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ModuleStatus)(nil), (*infra.ModuleStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ModuleStatus_To_infra_ModuleStatus(a.(*ModuleStatus), b.(*infra.ModuleStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.ModuleStatus)(nil), (*ModuleStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_ModuleStatus_To_v1alpha1_ModuleStatus(a.(*infra.ModuleStatus), b.(*ModuleStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Node)(nil), (*infra.Node)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Node_To_infra_Node(a.(*Node), b.(*infra.Node), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.Node)(nil), (*Node)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_Node_To_v1alpha1_Node(a.(*infra.Node), b.(*Node), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeItem)(nil), (*infra.NodeItem)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeItem_To_infra_NodeItem(a.(*NodeItem), b.(*infra.NodeItem), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.NodeItem)(nil), (*NodeItem)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_NodeItem_To_v1alpha1_NodeItem(a.(*infra.NodeItem), b.(*NodeItem), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeItemList)(nil), (*infra.NodeItemList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeItemList_To_infra_NodeItemList(a.(*NodeItemList), b.(*infra.NodeItemList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.NodeItemList)(nil), (*NodeItemList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_NodeItemList_To_v1alpha1_NodeItemList(a.(*infra.NodeItemList), b.(*NodeItemList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeItemSpec)(nil), (*infra.NodeItemSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeItemSpec_To_infra_NodeItemSpec(a.(*NodeItemSpec), b.(*infra.NodeItemSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.NodeItemSpec)(nil), (*NodeItemSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_NodeItemSpec_To_v1alpha1_NodeItemSpec(a.(*infra.NodeItemSpec), b.(*NodeItemSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeItemStatus)(nil), (*infra.NodeItemStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeItemStatus_To_infra_NodeItemStatus(a.(*NodeItemStatus), b.(*infra.NodeItemStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.NodeItemStatus)(nil), (*NodeItemStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_NodeItemStatus_To_v1alpha1_NodeItemStatus(a.(*infra.NodeItemStatus), b.(*NodeItemStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeList)(nil), (*infra.NodeList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeList_To_infra_NodeList(a.(*NodeList), b.(*infra.NodeList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.NodeList)(nil), (*NodeList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_NodeList_To_v1alpha1_NodeList(a.(*infra.NodeList), b.(*NodeList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeSet)(nil), (*infra.NodeSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeSet_To_infra_NodeSet(a.(*NodeSet), b.(*infra.NodeSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.NodeSet)(nil), (*NodeSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_NodeSet_To_v1alpha1_NodeSet(a.(*infra.NodeSet), b.(*NodeSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeSetList)(nil), (*infra.NodeSetList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeSetList_To_infra_NodeSetList(a.(*NodeSetList), b.(*infra.NodeSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.NodeSetList)(nil), (*NodeSetList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_NodeSetList_To_v1alpha1_NodeSetList(a.(*infra.NodeSetList), b.(*NodeSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeSetSpec)(nil), (*infra.NodeSetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeSetSpec_To_infra_NodeSetSpec(a.(*NodeSetSpec), b.(*infra.NodeSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.NodeSetSpec)(nil), (*NodeSetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_NodeSetSpec_To_v1alpha1_NodeSetSpec(a.(*infra.NodeSetSpec), b.(*NodeSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeSetStatus)(nil), (*infra.NodeSetStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeSetStatus_To_infra_NodeSetStatus(a.(*NodeSetStatus), b.(*infra.NodeSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.NodeSetStatus)(nil), (*NodeSetStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_NodeSetStatus_To_v1alpha1_NodeSetStatus(a.(*infra.NodeSetStatus), b.(*NodeSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeSpec)(nil), (*infra.NodeSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeSpec_To_infra_NodeSpec(a.(*NodeSpec), b.(*infra.NodeSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.NodeSpec)(nil), (*NodeSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_NodeSpec_To_v1alpha1_NodeSpec(a.(*infra.NodeSpec), b.(*NodeSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeStatus)(nil), (*infra.NodeStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeStatus_To_infra_NodeStatus(a.(*NodeStatus), b.(*infra.NodeStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.NodeStatus)(nil), (*NodeStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_NodeStatus_To_v1alpha1_NodeStatus(a.(*infra.NodeStatus), b.(*NodeStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Partition)(nil), (*infra.Partition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Partition_To_infra_Partition(a.(*Partition), b.(*infra.Partition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.Partition)(nil), (*Partition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_Partition_To_v1alpha1_Partition(a.(*infra.Partition), b.(*Partition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PartitionList)(nil), (*infra.PartitionList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PartitionList_To_infra_PartitionList(a.(*PartitionList), b.(*infra.PartitionList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.PartitionList)(nil), (*PartitionList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_PartitionList_To_v1alpha1_PartitionList(a.(*infra.PartitionList), b.(*PartitionList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PartitionSpec)(nil), (*infra.PartitionSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PartitionSpec_To_infra_PartitionSpec(a.(*PartitionSpec), b.(*infra.PartitionSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.PartitionSpec)(nil), (*PartitionSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_PartitionSpec_To_v1alpha1_PartitionSpec(a.(*infra.PartitionSpec), b.(*PartitionSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PartitionStatus)(nil), (*infra.PartitionStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PartitionStatus_To_infra_PartitionStatus(a.(*PartitionStatus), b.(*infra.PartitionStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.PartitionStatus)(nil), (*PartitionStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_PartitionStatus_To_v1alpha1_PartitionStatus(a.(*infra.PartitionStatus), b.(*PartitionStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Port)(nil), (*infra.Port)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Port_To_infra_Port(a.(*Port), b.(*infra.Port), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.Port)(nil), (*Port)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_Port_To_v1alpha1_Port(a.(*infra.Port), b.(*Port), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PortList)(nil), (*infra.PortList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PortList_To_infra_PortList(a.(*PortList), b.(*infra.PortList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.PortList)(nil), (*PortList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_PortList_To_v1alpha1_PortList(a.(*infra.PortList), b.(*PortList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PortSpec)(nil), (*infra.PortSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PortSpec_To_infra_PortSpec(a.(*PortSpec), b.(*infra.PortSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.PortSpec)(nil), (*PortSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_PortSpec_To_v1alpha1_PortSpec(a.(*infra.PortSpec), b.(*PortSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PortStatus)(nil), (*infra.PortStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PortStatus_To_infra_PortStatus(a.(*PortStatus), b.(*infra.PortStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.PortStatus)(nil), (*PortStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_PortStatus_To_v1alpha1_PortStatus(a.(*infra.PortStatus), b.(*PortStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Rack)(nil), (*infra.Rack)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Rack_To_infra_Rack(a.(*Rack), b.(*infra.Rack), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.Rack)(nil), (*Rack)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_Rack_To_v1alpha1_Rack(a.(*infra.Rack), b.(*Rack), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RackList)(nil), (*infra.RackList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RackList_To_infra_RackList(a.(*RackList), b.(*infra.RackList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.RackList)(nil), (*RackList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_RackList_To_v1alpha1_RackList(a.(*infra.RackList), b.(*RackList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RackSpec)(nil), (*infra.RackSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RackSpec_To_infra_RackSpec(a.(*RackSpec), b.(*infra.RackSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.RackSpec)(nil), (*RackSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_RackSpec_To_v1alpha1_RackSpec(a.(*infra.RackSpec), b.(*RackSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RackStatus)(nil), (*infra.RackStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RackStatus_To_infra_RackStatus(a.(*RackStatus), b.(*infra.RackStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.RackStatus)(nil), (*RackStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_RackStatus_To_v1alpha1_RackStatus(a.(*infra.RackStatus), b.(*RackStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Region)(nil), (*infra.Region)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Region_To_infra_Region(a.(*Region), b.(*infra.Region), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.Region)(nil), (*Region)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_Region_To_v1alpha1_Region(a.(*infra.Region), b.(*Region), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RegionList)(nil), (*infra.RegionList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RegionList_To_infra_RegionList(a.(*RegionList), b.(*infra.RegionList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.RegionList)(nil), (*RegionList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_RegionList_To_v1alpha1_RegionList(a.(*infra.RegionList), b.(*RegionList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RegionSpec)(nil), (*infra.RegionSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RegionSpec_To_infra_RegionSpec(a.(*RegionSpec), b.(*infra.RegionSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.RegionSpec)(nil), (*RegionSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_RegionSpec_To_v1alpha1_RegionSpec(a.(*infra.RegionSpec), b.(*RegionSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RegionStatus)(nil), (*infra.RegionStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RegionStatus_To_infra_RegionStatus(a.(*RegionStatus), b.(*infra.RegionStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.RegionStatus)(nil), (*RegionStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_RegionStatus_To_v1alpha1_RegionStatus(a.(*infra.RegionStatus), b.(*RegionStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Site)(nil), (*infra.Site)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Site_To_infra_Site(a.(*Site), b.(*infra.Site), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.Site)(nil), (*Site)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_Site_To_v1alpha1_Site(a.(*infra.Site), b.(*Site), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SiteList)(nil), (*infra.SiteList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SiteList_To_infra_SiteList(a.(*SiteList), b.(*infra.SiteList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.SiteList)(nil), (*SiteList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_SiteList_To_v1alpha1_SiteList(a.(*infra.SiteList), b.(*SiteList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SiteSpec)(nil), (*infra.SiteSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SiteSpec_To_infra_SiteSpec(a.(*SiteSpec), b.(*infra.SiteSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.SiteSpec)(nil), (*SiteSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_SiteSpec_To_v1alpha1_SiteSpec(a.(*infra.SiteSpec), b.(*SiteSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SiteStatus)(nil), (*infra.SiteStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SiteStatus_To_infra_SiteStatus(a.(*SiteStatus), b.(*infra.SiteStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*infra.SiteStatus)(nil), (*SiteStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_SiteStatus_To_v1alpha1_SiteStatus(a.(*infra.SiteStatus), b.(*SiteStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*id.ClusterID)(nil), (*idv1alpha1.ClusterID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_id_ClusterID_To_v1alpha1_ClusterID(a.(*id.ClusterID), b.(*idv1alpha1.ClusterID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*id.EndpointID)(nil), (*idv1alpha1.EndpointID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_id_EndpointID_To_v1alpha1_EndpointID(a.(*id.EndpointID), b.(*idv1alpha1.EndpointID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*id.NodeID)(nil), (*idv1alpha1.NodeID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_id_NodeID_To_v1alpha1_NodeID(a.(*id.NodeID), b.(*idv1alpha1.NodeID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*id.PartitionAdaptorID)(nil), (*idv1alpha1.PartitionAdaptorID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_id_PartitionAdaptorID_To_v1alpha1_PartitionAdaptorID(a.(*id.PartitionAdaptorID), b.(*idv1alpha1.PartitionAdaptorID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*id.PartitionAttachmentID)(nil), (*idv1alpha1.PartitionAttachmentID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_id_PartitionAttachmentID_To_v1alpha1_PartitionAttachmentID(a.(*id.PartitionAttachmentID), b.(*idv1alpha1.PartitionAttachmentID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*id.PartitionClusterID)(nil), (*idv1alpha1.PartitionClusterID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_id_PartitionClusterID_To_v1alpha1_PartitionClusterID(a.(*id.PartitionClusterID), b.(*idv1alpha1.PartitionClusterID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*id.PartitionEndpointID)(nil), (*idv1alpha1.PartitionEndpointID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_id_PartitionEndpointID_To_v1alpha1_PartitionEndpointID(a.(*id.PartitionEndpointID), b.(*idv1alpha1.PartitionEndpointID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*id.PartitionNodeID)(nil), (*idv1alpha1.PartitionNodeID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_id_PartitionNodeID_To_v1alpha1_PartitionNodeID(a.(*id.PartitionNodeID), b.(*idv1alpha1.PartitionNodeID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*id.PartitionPortID)(nil), (*idv1alpha1.PartitionPortID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_id_PartitionPortID_To_v1alpha1_PartitionPortID(a.(*id.PartitionPortID), b.(*idv1alpha1.PartitionPortID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*id.SiteID)(nil), (*idv1alpha1.SiteID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_id_SiteID_To_v1alpha1_SiteID(a.(*id.SiteID), b.(*idv1alpha1.SiteID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*infra.EndpointSetSpec)(nil), (*EndpointSetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_EndpointSetSpec_To_v1alpha1_EndpointSetSpec(a.(*infra.EndpointSetSpec), b.(*EndpointSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*infra.LinkSetSpec)(nil), (*LinkSetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_LinkSetSpec_To_v1alpha1_LinkSetSpec(a.(*infra.LinkSetSpec), b.(*LinkSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*infra.LinkSpec)(nil), (*LinkSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_infra_LinkSpec_To_v1alpha1_LinkSpec(a.(*infra.LinkSpec), b.(*LinkSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*idv1alpha1.ClusterID)(nil), (*id.ClusterID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClusterID_To_id_ClusterID(a.(*idv1alpha1.ClusterID), b.(*id.ClusterID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*idv1alpha1.EndpointID)(nil), (*id.EndpointID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EndpointID_To_id_EndpointID(a.(*idv1alpha1.EndpointID), b.(*id.EndpointID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*EndpointSetSpec)(nil), (*infra.EndpointSetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EndpointSetSpec_To_infra_EndpointSetSpec(a.(*EndpointSetSpec), b.(*infra.EndpointSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*LinkSetSpec)(nil), (*infra.LinkSetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_LinkSetSpec_To_infra_LinkSetSpec(a.(*LinkSetSpec), b.(*infra.LinkSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*LinkSpec)(nil), (*infra.LinkSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_LinkSpec_To_infra_LinkSpec(a.(*LinkSpec), b.(*infra.LinkSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*idv1alpha1.NodeID)(nil), (*id.NodeID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeID_To_id_NodeID(a.(*idv1alpha1.NodeID), b.(*id.NodeID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*idv1alpha1.PartitionAdaptorID)(nil), (*id.PartitionAdaptorID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PartitionAdaptorID_To_id_PartitionAdaptorID(a.(*idv1alpha1.PartitionAdaptorID), b.(*id.PartitionAdaptorID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*idv1alpha1.PartitionAttachmentID)(nil), (*id.PartitionAttachmentID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PartitionAttachmentID_To_id_PartitionAttachmentID(a.(*idv1alpha1.PartitionAttachmentID), b.(*id.PartitionAttachmentID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*idv1alpha1.PartitionClusterID)(nil), (*id.PartitionClusterID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PartitionClusterID_To_id_PartitionClusterID(a.(*idv1alpha1.PartitionClusterID), b.(*id.PartitionClusterID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*idv1alpha1.PartitionEndpointID)(nil), (*id.PartitionEndpointID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PartitionEndpointID_To_id_PartitionEndpointID(a.(*idv1alpha1.PartitionEndpointID), b.(*id.PartitionEndpointID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*idv1alpha1.PartitionNodeID)(nil), (*id.PartitionNodeID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PartitionNodeID_To_id_PartitionNodeID(a.(*idv1alpha1.PartitionNodeID), b.(*id.PartitionNodeID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*idv1alpha1.PartitionPortID)(nil), (*id.PartitionPortID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PartitionPortID_To_id_PartitionPortID(a.(*idv1alpha1.PartitionPortID), b.(*id.PartitionPortID), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*idv1alpha1.SiteID)(nil), (*id.SiteID)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SiteID_To_id_SiteID(a.(*idv1alpha1.SiteID), b.(*id.SiteID), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Adaptor_To_infra_Adaptor(in *Adaptor, out *infra.Adaptor, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_AdaptorSpec_To_infra_AdaptorSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_AdaptorStatus_To_infra_AdaptorStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Adaptor_To_infra_Adaptor is an autogenerated conversion function.
func Convert_v1alpha1_Adaptor_To_infra_Adaptor(in *Adaptor, out *infra.Adaptor, s conversion.Scope) error {
	return autoConvert_v1alpha1_Adaptor_To_infra_Adaptor(in, out, s)
}

func autoConvert_infra_Adaptor_To_v1alpha1_Adaptor(in *infra.Adaptor, out *Adaptor, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_AdaptorSpec_To_v1alpha1_AdaptorSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_AdaptorStatus_To_v1alpha1_AdaptorStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_Adaptor_To_v1alpha1_Adaptor is an autogenerated conversion function.
func Convert_infra_Adaptor_To_v1alpha1_Adaptor(in *infra.Adaptor, out *Adaptor, s conversion.Scope) error {
	return autoConvert_infra_Adaptor_To_v1alpha1_Adaptor(in, out, s)
}

func autoConvert_v1alpha1_AdaptorList_To_infra_AdaptorList(in *AdaptorList, out *infra.AdaptorList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.Adaptor, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Adaptor_To_infra_Adaptor(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_AdaptorList_To_infra_AdaptorList is an autogenerated conversion function.
func Convert_v1alpha1_AdaptorList_To_infra_AdaptorList(in *AdaptorList, out *infra.AdaptorList, s conversion.Scope) error {
	return autoConvert_v1alpha1_AdaptorList_To_infra_AdaptorList(in, out, s)
}

func autoConvert_infra_AdaptorList_To_v1alpha1_AdaptorList(in *infra.AdaptorList, out *AdaptorList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Adaptor, len(*in))
		for i := range *in {
			if err := Convert_infra_Adaptor_To_v1alpha1_Adaptor(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_AdaptorList_To_v1alpha1_AdaptorList is an autogenerated conversion function.
func Convert_infra_AdaptorList_To_v1alpha1_AdaptorList(in *infra.AdaptorList, out *AdaptorList, s conversion.Scope) error {
	return autoConvert_infra_AdaptorList_To_v1alpha1_AdaptorList(in, out, s)
}

func autoConvert_v1alpha1_AdaptorSpec_To_infra_AdaptorSpec(in *AdaptorSpec, out *infra.AdaptorSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_PartitionAdaptorID_To_id_PartitionAdaptorID(&in.PartitionAdaptorID, &out.PartitionAdaptorID, s); err != nil {
		return err
	}
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_AdaptorSpec_To_infra_AdaptorSpec is an autogenerated conversion function.
func Convert_v1alpha1_AdaptorSpec_To_infra_AdaptorSpec(in *AdaptorSpec, out *infra.AdaptorSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_AdaptorSpec_To_infra_AdaptorSpec(in, out, s)
}

func autoConvert_infra_AdaptorSpec_To_v1alpha1_AdaptorSpec(in *infra.AdaptorSpec, out *AdaptorSpec, s conversion.Scope) error {
	if err := Convert_id_PartitionAdaptorID_To_v1alpha1_PartitionAdaptorID(&in.PartitionAdaptorID, &out.PartitionAdaptorID, s); err != nil {
		return err
	}
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_AdaptorSpec_To_v1alpha1_AdaptorSpec is an autogenerated conversion function.
func Convert_infra_AdaptorSpec_To_v1alpha1_AdaptorSpec(in *infra.AdaptorSpec, out *AdaptorSpec, s conversion.Scope) error {
	return autoConvert_infra_AdaptorSpec_To_v1alpha1_AdaptorSpec(in, out, s)
}

func autoConvert_v1alpha1_AdaptorStatus_To_infra_AdaptorStatus(in *AdaptorStatus, out *infra.AdaptorStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_AdaptorStatus_To_infra_AdaptorStatus is an autogenerated conversion function.
func Convert_v1alpha1_AdaptorStatus_To_infra_AdaptorStatus(in *AdaptorStatus, out *infra.AdaptorStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_AdaptorStatus_To_infra_AdaptorStatus(in, out, s)
}

func autoConvert_infra_AdaptorStatus_To_v1alpha1_AdaptorStatus(in *infra.AdaptorStatus, out *AdaptorStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_AdaptorStatus_To_v1alpha1_AdaptorStatus is an autogenerated conversion function.
func Convert_infra_AdaptorStatus_To_v1alpha1_AdaptorStatus(in *infra.AdaptorStatus, out *AdaptorStatus, s conversion.Scope) error {
	return autoConvert_infra_AdaptorStatus_To_v1alpha1_AdaptorStatus(in, out, s)
}

func autoConvert_v1alpha1_Cluster_To_infra_Cluster(in *Cluster, out *infra.Cluster, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ClusterSpec_To_infra_ClusterSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ClusterStatus_To_infra_ClusterStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Cluster_To_infra_Cluster is an autogenerated conversion function.
func Convert_v1alpha1_Cluster_To_infra_Cluster(in *Cluster, out *infra.Cluster, s conversion.Scope) error {
	return autoConvert_v1alpha1_Cluster_To_infra_Cluster(in, out, s)
}

func autoConvert_infra_Cluster_To_v1alpha1_Cluster(in *infra.Cluster, out *Cluster, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_ClusterSpec_To_v1alpha1_ClusterSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_ClusterStatus_To_v1alpha1_ClusterStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_Cluster_To_v1alpha1_Cluster is an autogenerated conversion function.
func Convert_infra_Cluster_To_v1alpha1_Cluster(in *infra.Cluster, out *Cluster, s conversion.Scope) error {
	return autoConvert_infra_Cluster_To_v1alpha1_Cluster(in, out, s)
}

func autoConvert_v1alpha1_ClusterList_To_infra_ClusterList(in *ClusterList, out *infra.ClusterList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.Cluster, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Cluster_To_infra_Cluster(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_ClusterList_To_infra_ClusterList is an autogenerated conversion function.
func Convert_v1alpha1_ClusterList_To_infra_ClusterList(in *ClusterList, out *infra.ClusterList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClusterList_To_infra_ClusterList(in, out, s)
}

func autoConvert_infra_ClusterList_To_v1alpha1_ClusterList(in *infra.ClusterList, out *ClusterList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			if err := Convert_infra_Cluster_To_v1alpha1_Cluster(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_ClusterList_To_v1alpha1_ClusterList is an autogenerated conversion function.
func Convert_infra_ClusterList_To_v1alpha1_ClusterList(in *infra.ClusterList, out *ClusterList, s conversion.Scope) error {
	return autoConvert_infra_ClusterList_To_v1alpha1_ClusterList(in, out, s)
}

func autoConvert_v1alpha1_ClusterSpec_To_infra_ClusterSpec(in *ClusterSpec, out *infra.ClusterSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_PartitionClusterID_To_id_PartitionClusterID(&in.PartitionClusterID, &out.PartitionClusterID, s); err != nil {
		return err
	}
	out.Provider = in.Provider
	out.Location = (*infra.Location)(unsafe.Pointer(in.Location))
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ClusterSpec_To_infra_ClusterSpec is an autogenerated conversion function.
func Convert_v1alpha1_ClusterSpec_To_infra_ClusterSpec(in *ClusterSpec, out *infra.ClusterSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClusterSpec_To_infra_ClusterSpec(in, out, s)
}

func autoConvert_infra_ClusterSpec_To_v1alpha1_ClusterSpec(in *infra.ClusterSpec, out *ClusterSpec, s conversion.Scope) error {
	if err := Convert_id_PartitionClusterID_To_v1alpha1_PartitionClusterID(&in.PartitionClusterID, &out.PartitionClusterID, s); err != nil {
		return err
	}
	out.Provider = in.Provider
	out.Location = (*Location)(unsafe.Pointer(in.Location))
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_ClusterSpec_To_v1alpha1_ClusterSpec is an autogenerated conversion function.
func Convert_infra_ClusterSpec_To_v1alpha1_ClusterSpec(in *infra.ClusterSpec, out *ClusterSpec, s conversion.Scope) error {
	return autoConvert_infra_ClusterSpec_To_v1alpha1_ClusterSpec(in, out, s)
}

func autoConvert_v1alpha1_ClusterStatus_To_infra_ClusterStatus(in *ClusterStatus, out *infra.ClusterStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ClusterStatus_To_infra_ClusterStatus is an autogenerated conversion function.
func Convert_v1alpha1_ClusterStatus_To_infra_ClusterStatus(in *ClusterStatus, out *infra.ClusterStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClusterStatus_To_infra_ClusterStatus(in, out, s)
}

func autoConvert_infra_ClusterStatus_To_v1alpha1_ClusterStatus(in *infra.ClusterStatus, out *ClusterStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_ClusterStatus_To_v1alpha1_ClusterStatus is an autogenerated conversion function.
func Convert_infra_ClusterStatus_To_v1alpha1_ClusterStatus(in *infra.ClusterStatus, out *ClusterStatus, s conversion.Scope) error {
	return autoConvert_infra_ClusterStatus_To_v1alpha1_ClusterStatus(in, out, s)
}

func autoConvert_v1alpha1_Endpoint_To_infra_Endpoint(in *Endpoint, out *infra.Endpoint, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_EndpointSpec_To_infra_EndpointSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_EndpointStatus_To_infra_EndpointStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Endpoint_To_infra_Endpoint is an autogenerated conversion function.
func Convert_v1alpha1_Endpoint_To_infra_Endpoint(in *Endpoint, out *infra.Endpoint, s conversion.Scope) error {
	return autoConvert_v1alpha1_Endpoint_To_infra_Endpoint(in, out, s)
}

func autoConvert_infra_Endpoint_To_v1alpha1_Endpoint(in *infra.Endpoint, out *Endpoint, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_EndpointSpec_To_v1alpha1_EndpointSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_EndpointStatus_To_v1alpha1_EndpointStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_Endpoint_To_v1alpha1_Endpoint is an autogenerated conversion function.
func Convert_infra_Endpoint_To_v1alpha1_Endpoint(in *infra.Endpoint, out *Endpoint, s conversion.Scope) error {
	return autoConvert_infra_Endpoint_To_v1alpha1_Endpoint(in, out, s)
}

func autoConvert_v1alpha1_EndpointList_To_infra_EndpointList(in *EndpointList, out *infra.EndpointList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.Endpoint, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Endpoint_To_infra_Endpoint(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_EndpointList_To_infra_EndpointList is an autogenerated conversion function.
func Convert_v1alpha1_EndpointList_To_infra_EndpointList(in *EndpointList, out *infra.EndpointList, s conversion.Scope) error {
	return autoConvert_v1alpha1_EndpointList_To_infra_EndpointList(in, out, s)
}

func autoConvert_infra_EndpointList_To_v1alpha1_EndpointList(in *infra.EndpointList, out *EndpointList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Endpoint, len(*in))
		for i := range *in {
			if err := Convert_infra_Endpoint_To_v1alpha1_Endpoint(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_EndpointList_To_v1alpha1_EndpointList is an autogenerated conversion function.
func Convert_infra_EndpointList_To_v1alpha1_EndpointList(in *infra.EndpointList, out *EndpointList, s conversion.Scope) error {
	return autoConvert_infra_EndpointList_To_v1alpha1_EndpointList(in, out, s)
}

func autoConvert_v1alpha1_EndpointSet_To_infra_EndpointSet(in *EndpointSet, out *infra.EndpointSet, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_EndpointSetSpec_To_infra_EndpointSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_EndpointSetStatus_To_infra_EndpointSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_EndpointSet_To_infra_EndpointSet is an autogenerated conversion function.
func Convert_v1alpha1_EndpointSet_To_infra_EndpointSet(in *EndpointSet, out *infra.EndpointSet, s conversion.Scope) error {
	return autoConvert_v1alpha1_EndpointSet_To_infra_EndpointSet(in, out, s)
}

func autoConvert_infra_EndpointSet_To_v1alpha1_EndpointSet(in *infra.EndpointSet, out *EndpointSet, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_EndpointSetSpec_To_v1alpha1_EndpointSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_EndpointSetStatus_To_v1alpha1_EndpointSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_EndpointSet_To_v1alpha1_EndpointSet is an autogenerated conversion function.
func Convert_infra_EndpointSet_To_v1alpha1_EndpointSet(in *infra.EndpointSet, out *EndpointSet, s conversion.Scope) error {
	return autoConvert_infra_EndpointSet_To_v1alpha1_EndpointSet(in, out, s)
}

func autoConvert_v1alpha1_EndpointSetList_To_infra_EndpointSetList(in *EndpointSetList, out *infra.EndpointSetList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.EndpointSet, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_EndpointSet_To_infra_EndpointSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_EndpointSetList_To_infra_EndpointSetList is an autogenerated conversion function.
func Convert_v1alpha1_EndpointSetList_To_infra_EndpointSetList(in *EndpointSetList, out *infra.EndpointSetList, s conversion.Scope) error {
	return autoConvert_v1alpha1_EndpointSetList_To_infra_EndpointSetList(in, out, s)
}

func autoConvert_infra_EndpointSetList_To_v1alpha1_EndpointSetList(in *infra.EndpointSetList, out *EndpointSetList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EndpointSet, len(*in))
		for i := range *in {
			if err := Convert_infra_EndpointSet_To_v1alpha1_EndpointSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_EndpointSetList_To_v1alpha1_EndpointSetList is an autogenerated conversion function.
func Convert_infra_EndpointSetList_To_v1alpha1_EndpointSetList(in *infra.EndpointSetList, out *EndpointSetList, s conversion.Scope) error {
	return autoConvert_infra_EndpointSetList_To_v1alpha1_EndpointSetList(in, out, s)
}

func autoConvert_v1alpha1_EndpointSetStatus_To_infra_EndpointSetStatus(in *EndpointSetStatus, out *infra.EndpointSetStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	out.ESI = (*uint32)(unsafe.Pointer(in.ESI))
	out.LagId = (*uint32)(unsafe.Pointer(in.LagId))
	return nil
}

// Convert_v1alpha1_EndpointSetStatus_To_infra_EndpointSetStatus is an autogenerated conversion function.
func Convert_v1alpha1_EndpointSetStatus_To_infra_EndpointSetStatus(in *EndpointSetStatus, out *infra.EndpointSetStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_EndpointSetStatus_To_infra_EndpointSetStatus(in, out, s)
}

func autoConvert_infra_EndpointSetStatus_To_v1alpha1_EndpointSetStatus(in *infra.EndpointSetStatus, out *EndpointSetStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	out.ESI = (*uint32)(unsafe.Pointer(in.ESI))
	out.LagId = (*uint32)(unsafe.Pointer(in.LagId))
	return nil
}

// Convert_infra_EndpointSetStatus_To_v1alpha1_EndpointSetStatus is an autogenerated conversion function.
func Convert_infra_EndpointSetStatus_To_v1alpha1_EndpointSetStatus(in *infra.EndpointSetStatus, out *EndpointSetStatus, s conversion.Scope) error {
	return autoConvert_infra_EndpointSetStatus_To_v1alpha1_EndpointSetStatus(in, out, s)
}

func autoConvert_v1alpha1_EndpointSpec_To_infra_EndpointSpec(in *EndpointSpec, out *infra.EndpointSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_PartitionEndpointID_To_id_PartitionEndpointID(&in.PartitionEndpointID, &out.PartitionEndpointID, s); err != nil {
		return err
	}
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	out.Speed = (*string)(unsafe.Pointer(in.Speed))
	out.VLANTagging = in.VLANTagging
	return nil
}

// Convert_v1alpha1_EndpointSpec_To_infra_EndpointSpec is an autogenerated conversion function.
func Convert_v1alpha1_EndpointSpec_To_infra_EndpointSpec(in *EndpointSpec, out *infra.EndpointSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_EndpointSpec_To_infra_EndpointSpec(in, out, s)
}

func autoConvert_infra_EndpointSpec_To_v1alpha1_EndpointSpec(in *infra.EndpointSpec, out *EndpointSpec, s conversion.Scope) error {
	if err := Convert_id_PartitionEndpointID_To_v1alpha1_PartitionEndpointID(&in.PartitionEndpointID, &out.PartitionEndpointID, s); err != nil {
		return err
	}
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	out.Speed = (*string)(unsafe.Pointer(in.Speed))
	out.VLANTagging = in.VLANTagging
	return nil
}

// Convert_infra_EndpointSpec_To_v1alpha1_EndpointSpec is an autogenerated conversion function.
func Convert_infra_EndpointSpec_To_v1alpha1_EndpointSpec(in *infra.EndpointSpec, out *EndpointSpec, s conversion.Scope) error {
	return autoConvert_infra_EndpointSpec_To_v1alpha1_EndpointSpec(in, out, s)
}

func autoConvert_v1alpha1_EndpointStatus_To_infra_EndpointStatus(in *EndpointStatus, out *infra.EndpointStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_EndpointStatus_To_infra_EndpointStatus is an autogenerated conversion function.
func Convert_v1alpha1_EndpointStatus_To_infra_EndpointStatus(in *EndpointStatus, out *infra.EndpointStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_EndpointStatus_To_infra_EndpointStatus(in, out, s)
}

func autoConvert_infra_EndpointStatus_To_v1alpha1_EndpointStatus(in *infra.EndpointStatus, out *EndpointStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_EndpointStatus_To_v1alpha1_EndpointStatus is an autogenerated conversion function.
func Convert_infra_EndpointStatus_To_v1alpha1_EndpointStatus(in *infra.EndpointStatus, out *EndpointStatus, s conversion.Scope) error {
	return autoConvert_infra_EndpointStatus_To_v1alpha1_EndpointStatus(in, out, s)
}

func autoConvert_v1alpha1_Link_To_infra_Link(in *Link, out *infra.Link, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_LinkSpec_To_infra_LinkSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_LinkStatus_To_infra_LinkStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Link_To_infra_Link is an autogenerated conversion function.
func Convert_v1alpha1_Link_To_infra_Link(in *Link, out *infra.Link, s conversion.Scope) error {
	return autoConvert_v1alpha1_Link_To_infra_Link(in, out, s)
}

func autoConvert_infra_Link_To_v1alpha1_Link(in *infra.Link, out *Link, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_LinkSpec_To_v1alpha1_LinkSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_LinkStatus_To_v1alpha1_LinkStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_Link_To_v1alpha1_Link is an autogenerated conversion function.
func Convert_infra_Link_To_v1alpha1_Link(in *infra.Link, out *Link, s conversion.Scope) error {
	return autoConvert_infra_Link_To_v1alpha1_Link(in, out, s)
}

func autoConvert_v1alpha1_LinkList_To_infra_LinkList(in *LinkList, out *infra.LinkList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.Link, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Link_To_infra_Link(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_LinkList_To_infra_LinkList is an autogenerated conversion function.
func Convert_v1alpha1_LinkList_To_infra_LinkList(in *LinkList, out *infra.LinkList, s conversion.Scope) error {
	return autoConvert_v1alpha1_LinkList_To_infra_LinkList(in, out, s)
}

func autoConvert_infra_LinkList_To_v1alpha1_LinkList(in *infra.LinkList, out *LinkList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Link, len(*in))
		for i := range *in {
			if err := Convert_infra_Link_To_v1alpha1_Link(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_LinkList_To_v1alpha1_LinkList is an autogenerated conversion function.
func Convert_infra_LinkList_To_v1alpha1_LinkList(in *infra.LinkList, out *LinkList, s conversion.Scope) error {
	return autoConvert_infra_LinkList_To_v1alpha1_LinkList(in, out, s)
}

func autoConvert_v1alpha1_LinkSet_To_infra_LinkSet(in *LinkSet, out *infra.LinkSet, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_LinkSetSpec_To_infra_LinkSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_LinkSetStatus_To_infra_LinkSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_LinkSet_To_infra_LinkSet is an autogenerated conversion function.
func Convert_v1alpha1_LinkSet_To_infra_LinkSet(in *LinkSet, out *infra.LinkSet, s conversion.Scope) error {
	return autoConvert_v1alpha1_LinkSet_To_infra_LinkSet(in, out, s)
}

func autoConvert_infra_LinkSet_To_v1alpha1_LinkSet(in *infra.LinkSet, out *LinkSet, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_LinkSetSpec_To_v1alpha1_LinkSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_LinkSetStatus_To_v1alpha1_LinkSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_LinkSet_To_v1alpha1_LinkSet is an autogenerated conversion function.
func Convert_infra_LinkSet_To_v1alpha1_LinkSet(in *infra.LinkSet, out *LinkSet, s conversion.Scope) error {
	return autoConvert_infra_LinkSet_To_v1alpha1_LinkSet(in, out, s)
}

func autoConvert_v1alpha1_LinkSetList_To_infra_LinkSetList(in *LinkSetList, out *infra.LinkSetList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.LinkSet, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_LinkSet_To_infra_LinkSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_LinkSetList_To_infra_LinkSetList is an autogenerated conversion function.
func Convert_v1alpha1_LinkSetList_To_infra_LinkSetList(in *LinkSetList, out *infra.LinkSetList, s conversion.Scope) error {
	return autoConvert_v1alpha1_LinkSetList_To_infra_LinkSetList(in, out, s)
}

func autoConvert_infra_LinkSetList_To_v1alpha1_LinkSetList(in *infra.LinkSetList, out *LinkSetList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinkSet, len(*in))
		for i := range *in {
			if err := Convert_infra_LinkSet_To_v1alpha1_LinkSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_LinkSetList_To_v1alpha1_LinkSetList is an autogenerated conversion function.
func Convert_infra_LinkSetList_To_v1alpha1_LinkSetList(in *infra.LinkSetList, out *LinkSetList, s conversion.Scope) error {
	return autoConvert_infra_LinkSetList_To_v1alpha1_LinkSetList(in, out, s)
}


func autoConvert_v1alpha1_LinkSetStatus_To_infra_LinkSetStatus(in *LinkSetStatus, out *infra.LinkSetStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	out.ESI = (*uint32)(unsafe.Pointer(in.ESI))
	out.LagId = (*uint32)(unsafe.Pointer(in.LagId))
	return nil
}

// Convert_v1alpha1_LinkSetStatus_To_infra_LinkSetStatus is an autogenerated conversion function.
func Convert_v1alpha1_LinkSetStatus_To_infra_LinkSetStatus(in *LinkSetStatus, out *infra.LinkSetStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_LinkSetStatus_To_infra_LinkSetStatus(in, out, s)
}

func autoConvert_infra_LinkSetStatus_To_v1alpha1_LinkSetStatus(in *infra.LinkSetStatus, out *LinkSetStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	out.ESI = (*uint32)(unsafe.Pointer(in.ESI))
	out.LagId = (*uint32)(unsafe.Pointer(in.LagId))
	return nil
}

// Convert_infra_LinkSetStatus_To_v1alpha1_LinkSetStatus is an autogenerated conversion function.
func Convert_infra_LinkSetStatus_To_v1alpha1_LinkSetStatus(in *infra.LinkSetStatus, out *LinkSetStatus, s conversion.Scope) error {
	return autoConvert_infra_LinkSetStatus_To_v1alpha1_LinkSetStatus(in, out, s)
}

func autoConvert_v1alpha1_LinkStatus_To_infra_LinkStatus(in *LinkStatus, out *infra.LinkStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_LinkStatus_To_infra_LinkStatus is an autogenerated conversion function.
func Convert_v1alpha1_LinkStatus_To_infra_LinkStatus(in *LinkStatus, out *infra.LinkStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_LinkStatus_To_infra_LinkStatus(in, out, s)
}

func autoConvert_infra_LinkStatus_To_v1alpha1_LinkStatus(in *infra.LinkStatus, out *LinkStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_LinkStatus_To_v1alpha1_LinkStatus is an autogenerated conversion function.
func Convert_infra_LinkStatus_To_v1alpha1_LinkStatus(in *infra.LinkStatus, out *LinkStatus, s conversion.Scope) error {
	return autoConvert_infra_LinkStatus_To_v1alpha1_LinkStatus(in, out, s)
}

func autoConvert_v1alpha1_Location_To_infra_Location(in *Location, out *infra.Location, s conversion.Scope) error {
	out.Latitude = in.Latitude
	out.Longitude = in.Longitude
	return nil
}

// Convert_v1alpha1_Location_To_infra_Location is an autogenerated conversion function.
func Convert_v1alpha1_Location_To_infra_Location(in *Location, out *infra.Location, s conversion.Scope) error {
	return autoConvert_v1alpha1_Location_To_infra_Location(in, out, s)
}

func autoConvert_infra_Location_To_v1alpha1_Location(in *infra.Location, out *Location, s conversion.Scope) error {
	out.Latitude = in.Latitude
	out.Longitude = in.Longitude
	return nil
}

// Convert_infra_Location_To_v1alpha1_Location is an autogenerated conversion function.
func Convert_infra_Location_To_v1alpha1_Location(in *infra.Location, out *Location, s conversion.Scope) error {
	return autoConvert_infra_Location_To_v1alpha1_Location(in, out, s)
}

func autoConvert_v1alpha1_Module_To_infra_Module(in *Module, out *infra.Module, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ModuleSpec_To_infra_ModuleSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ModuleStatus_To_infra_ModuleStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Module_To_infra_Module is an autogenerated conversion function.
func Convert_v1alpha1_Module_To_infra_Module(in *Module, out *infra.Module, s conversion.Scope) error {
	return autoConvert_v1alpha1_Module_To_infra_Module(in, out, s)
}

func autoConvert_infra_Module_To_v1alpha1_Module(in *infra.Module, out *Module, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_ModuleSpec_To_v1alpha1_ModuleSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_ModuleStatus_To_v1alpha1_ModuleStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_Module_To_v1alpha1_Module is an autogenerated conversion function.
func Convert_infra_Module_To_v1alpha1_Module(in *infra.Module, out *Module, s conversion.Scope) error {
	return autoConvert_infra_Module_To_v1alpha1_Module(in, out, s)
}

func autoConvert_v1alpha1_ModuleBay_To_infra_ModuleBay(in *ModuleBay, out *infra.ModuleBay, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ModuleBaySpec_To_infra_ModuleBaySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ModuleBayStatus_To_infra_ModuleBayStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ModuleBay_To_infra_ModuleBay is an autogenerated conversion function.
func Convert_v1alpha1_ModuleBay_To_infra_ModuleBay(in *ModuleBay, out *infra.ModuleBay, s conversion.Scope) error {
	return autoConvert_v1alpha1_ModuleBay_To_infra_ModuleBay(in, out, s)
}

func autoConvert_infra_ModuleBay_To_v1alpha1_ModuleBay(in *infra.ModuleBay, out *ModuleBay, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_ModuleBaySpec_To_v1alpha1_ModuleBaySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_ModuleBayStatus_To_v1alpha1_ModuleBayStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_ModuleBay_To_v1alpha1_ModuleBay is an autogenerated conversion function.
func Convert_infra_ModuleBay_To_v1alpha1_ModuleBay(in *infra.ModuleBay, out *ModuleBay, s conversion.Scope) error {
	return autoConvert_infra_ModuleBay_To_v1alpha1_ModuleBay(in, out, s)
}

func autoConvert_v1alpha1_ModuleBayList_To_infra_ModuleBayList(in *ModuleBayList, out *infra.ModuleBayList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.ModuleBay, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_ModuleBay_To_infra_ModuleBay(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_ModuleBayList_To_infra_ModuleBayList is an autogenerated conversion function.
func Convert_v1alpha1_ModuleBayList_To_infra_ModuleBayList(in *ModuleBayList, out *infra.ModuleBayList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ModuleBayList_To_infra_ModuleBayList(in, out, s)
}

func autoConvert_infra_ModuleBayList_To_v1alpha1_ModuleBayList(in *infra.ModuleBayList, out *ModuleBayList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ModuleBay, len(*in))
		for i := range *in {
			if err := Convert_infra_ModuleBay_To_v1alpha1_ModuleBay(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_ModuleBayList_To_v1alpha1_ModuleBayList is an autogenerated conversion function.
func Convert_infra_ModuleBayList_To_v1alpha1_ModuleBayList(in *infra.ModuleBayList, out *ModuleBayList, s conversion.Scope) error {
	return autoConvert_infra_ModuleBayList_To_v1alpha1_ModuleBayList(in, out, s)
}

func autoConvert_v1alpha1_ModuleBaySpec_To_infra_ModuleBaySpec(in *ModuleBaySpec, out *infra.ModuleBaySpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_PartitionNodeID_To_id_PartitionNodeID(&in.PartitionNodeID, &out.PartitionNodeID, s); err != nil {
		return err
	}
	out.Position = in.Position
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ModuleBaySpec_To_infra_ModuleBaySpec is an autogenerated conversion function.
func Convert_v1alpha1_ModuleBaySpec_To_infra_ModuleBaySpec(in *ModuleBaySpec, out *infra.ModuleBaySpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ModuleBaySpec_To_infra_ModuleBaySpec(in, out, s)
}

func autoConvert_infra_ModuleBaySpec_To_v1alpha1_ModuleBaySpec(in *infra.ModuleBaySpec, out *ModuleBaySpec, s conversion.Scope) error {
	if err := Convert_id_PartitionNodeID_To_v1alpha1_PartitionNodeID(&in.PartitionNodeID, &out.PartitionNodeID, s); err != nil {
		return err
	}
	out.Position = in.Position
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_ModuleBaySpec_To_v1alpha1_ModuleBaySpec is an autogenerated conversion function.
func Convert_infra_ModuleBaySpec_To_v1alpha1_ModuleBaySpec(in *infra.ModuleBaySpec, out *ModuleBaySpec, s conversion.Scope) error {
	return autoConvert_infra_ModuleBaySpec_To_v1alpha1_ModuleBaySpec(in, out, s)
}

func autoConvert_v1alpha1_ModuleBayStatus_To_infra_ModuleBayStatus(in *ModuleBayStatus, out *infra.ModuleBayStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ModuleBayStatus_To_infra_ModuleBayStatus is an autogenerated conversion function.
func Convert_v1alpha1_ModuleBayStatus_To_infra_ModuleBayStatus(in *ModuleBayStatus, out *infra.ModuleBayStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ModuleBayStatus_To_infra_ModuleBayStatus(in, out, s)
}

func autoConvert_infra_ModuleBayStatus_To_v1alpha1_ModuleBayStatus(in *infra.ModuleBayStatus, out *ModuleBayStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_ModuleBayStatus_To_v1alpha1_ModuleBayStatus is an autogenerated conversion function.
func Convert_infra_ModuleBayStatus_To_v1alpha1_ModuleBayStatus(in *infra.ModuleBayStatus, out *ModuleBayStatus, s conversion.Scope) error {
	return autoConvert_infra_ModuleBayStatus_To_v1alpha1_ModuleBayStatus(in, out, s)
}

func autoConvert_v1alpha1_ModuleList_To_infra_ModuleList(in *ModuleList, out *infra.ModuleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.Module, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Module_To_infra_Module(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_ModuleList_To_infra_ModuleList is an autogenerated conversion function.
func Convert_v1alpha1_ModuleList_To_infra_ModuleList(in *ModuleList, out *infra.ModuleList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ModuleList_To_infra_ModuleList(in, out, s)
}

func autoConvert_infra_ModuleList_To_v1alpha1_ModuleList(in *infra.ModuleList, out *ModuleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Module, len(*in))
		for i := range *in {
			if err := Convert_infra_Module_To_v1alpha1_Module(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_ModuleList_To_v1alpha1_ModuleList is an autogenerated conversion function.
func Convert_infra_ModuleList_To_v1alpha1_ModuleList(in *infra.ModuleList, out *ModuleList, s conversion.Scope) error {
	return autoConvert_infra_ModuleList_To_v1alpha1_ModuleList(in, out, s)
}

func autoConvert_v1alpha1_ModuleSpec_To_infra_ModuleSpec(in *ModuleSpec, out *infra.ModuleSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_PartitionNodeID_To_id_PartitionNodeID(&in.PartitionNodeID, &out.PartitionNodeID, s); err != nil {
		return err
	}
	out.ModuleBay = in.ModuleBay
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ModuleSpec_To_infra_ModuleSpec is an autogenerated conversion function.
func Convert_v1alpha1_ModuleSpec_To_infra_ModuleSpec(in *ModuleSpec, out *infra.ModuleSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ModuleSpec_To_infra_ModuleSpec(in, out, s)
}

func autoConvert_infra_ModuleSpec_To_v1alpha1_ModuleSpec(in *infra.ModuleSpec, out *ModuleSpec, s conversion.Scope) error {
	if err := Convert_id_PartitionNodeID_To_v1alpha1_PartitionNodeID(&in.PartitionNodeID, &out.PartitionNodeID, s); err != nil {
		return err
	}
	out.ModuleBay = in.ModuleBay
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_ModuleSpec_To_v1alpha1_ModuleSpec is an autogenerated conversion function.
func Convert_infra_ModuleSpec_To_v1alpha1_ModuleSpec(in *infra.ModuleSpec, out *ModuleSpec, s conversion.Scope) error {
	return autoConvert_infra_ModuleSpec_To_v1alpha1_ModuleSpec(in, out, s)
}

func autoConvert_v1alpha1_ModuleStatus_To_infra_ModuleStatus(in *ModuleStatus, out *infra.ModuleStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ModuleStatus_To_infra_ModuleStatus is an autogenerated conversion function.
func Convert_v1alpha1_ModuleStatus_To_infra_ModuleStatus(in *ModuleStatus, out *infra.ModuleStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ModuleStatus_To_infra_ModuleStatus(in, out, s)
}

func autoConvert_infra_ModuleStatus_To_v1alpha1_ModuleStatus(in *infra.ModuleStatus, out *ModuleStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_ModuleStatus_To_v1alpha1_ModuleStatus is an autogenerated conversion function.
func Convert_infra_ModuleStatus_To_v1alpha1_ModuleStatus(in *infra.ModuleStatus, out *ModuleStatus, s conversion.Scope) error {
	return autoConvert_infra_ModuleStatus_To_v1alpha1_ModuleStatus(in, out, s)
}

func autoConvert_v1alpha1_Node_To_infra_Node(in *Node, out *infra.Node, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_NodeSpec_To_infra_NodeSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_NodeStatus_To_infra_NodeStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Node_To_infra_Node is an autogenerated conversion function.
func Convert_v1alpha1_Node_To_infra_Node(in *Node, out *infra.Node, s conversion.Scope) error {
	return autoConvert_v1alpha1_Node_To_infra_Node(in, out, s)
}

func autoConvert_infra_Node_To_v1alpha1_Node(in *infra.Node, out *Node, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_NodeSpec_To_v1alpha1_NodeSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_NodeStatus_To_v1alpha1_NodeStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_Node_To_v1alpha1_Node is an autogenerated conversion function.
func Convert_infra_Node_To_v1alpha1_Node(in *infra.Node, out *Node, s conversion.Scope) error {
	return autoConvert_infra_Node_To_v1alpha1_Node(in, out, s)
}

func autoConvert_v1alpha1_NodeItem_To_infra_NodeItem(in *NodeItem, out *infra.NodeItem, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_NodeItemSpec_To_infra_NodeItemSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_NodeItemStatus_To_infra_NodeItemStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_NodeItem_To_infra_NodeItem is an autogenerated conversion function.
func Convert_v1alpha1_NodeItem_To_infra_NodeItem(in *NodeItem, out *infra.NodeItem, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeItem_To_infra_NodeItem(in, out, s)
}

func autoConvert_infra_NodeItem_To_v1alpha1_NodeItem(in *infra.NodeItem, out *NodeItem, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_NodeItemSpec_To_v1alpha1_NodeItemSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_NodeItemStatus_To_v1alpha1_NodeItemStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_NodeItem_To_v1alpha1_NodeItem is an autogenerated conversion function.
func Convert_infra_NodeItem_To_v1alpha1_NodeItem(in *infra.NodeItem, out *NodeItem, s conversion.Scope) error {
	return autoConvert_infra_NodeItem_To_v1alpha1_NodeItem(in, out, s)
}

func autoConvert_v1alpha1_NodeItemList_To_infra_NodeItemList(in *NodeItemList, out *infra.NodeItemList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.NodeItem, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_NodeItem_To_infra_NodeItem(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_NodeItemList_To_infra_NodeItemList is an autogenerated conversion function.
func Convert_v1alpha1_NodeItemList_To_infra_NodeItemList(in *NodeItemList, out *infra.NodeItemList, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeItemList_To_infra_NodeItemList(in, out, s)
}

func autoConvert_infra_NodeItemList_To_v1alpha1_NodeItemList(in *infra.NodeItemList, out *NodeItemList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeItem, len(*in))
		for i := range *in {
			if err := Convert_infra_NodeItem_To_v1alpha1_NodeItem(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_NodeItemList_To_v1alpha1_NodeItemList is an autogenerated conversion function.
func Convert_infra_NodeItemList_To_v1alpha1_NodeItemList(in *infra.NodeItemList, out *NodeItemList, s conversion.Scope) error {
	return autoConvert_infra_NodeItemList_To_v1alpha1_NodeItemList(in, out, s)
}

func autoConvert_v1alpha1_NodeItemSpec_To_infra_NodeItemSpec(in *NodeItemSpec, out *infra.NodeItemSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_PartitionNodeID_To_id_PartitionNodeID(&in.PartitionNodeID, &out.PartitionNodeID, s); err != nil {
		return err
	}
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_NodeItemSpec_To_infra_NodeItemSpec is an autogenerated conversion function.
func Convert_v1alpha1_NodeItemSpec_To_infra_NodeItemSpec(in *NodeItemSpec, out *infra.NodeItemSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeItemSpec_To_infra_NodeItemSpec(in, out, s)
}

func autoConvert_infra_NodeItemSpec_To_v1alpha1_NodeItemSpec(in *infra.NodeItemSpec, out *NodeItemSpec, s conversion.Scope) error {
	if err := Convert_id_PartitionNodeID_To_v1alpha1_PartitionNodeID(&in.PartitionNodeID, &out.PartitionNodeID, s); err != nil {
		return err
	}
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_NodeItemSpec_To_v1alpha1_NodeItemSpec is an autogenerated conversion function.
func Convert_infra_NodeItemSpec_To_v1alpha1_NodeItemSpec(in *infra.NodeItemSpec, out *NodeItemSpec, s conversion.Scope) error {
	return autoConvert_infra_NodeItemSpec_To_v1alpha1_NodeItemSpec(in, out, s)
}

func autoConvert_v1alpha1_NodeItemStatus_To_infra_NodeItemStatus(in *NodeItemStatus, out *infra.NodeItemStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_NodeItemStatus_To_infra_NodeItemStatus is an autogenerated conversion function.
func Convert_v1alpha1_NodeItemStatus_To_infra_NodeItemStatus(in *NodeItemStatus, out *infra.NodeItemStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeItemStatus_To_infra_NodeItemStatus(in, out, s)
}

func autoConvert_infra_NodeItemStatus_To_v1alpha1_NodeItemStatus(in *infra.NodeItemStatus, out *NodeItemStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_NodeItemStatus_To_v1alpha1_NodeItemStatus is an autogenerated conversion function.
func Convert_infra_NodeItemStatus_To_v1alpha1_NodeItemStatus(in *infra.NodeItemStatus, out *NodeItemStatus, s conversion.Scope) error {
	return autoConvert_infra_NodeItemStatus_To_v1alpha1_NodeItemStatus(in, out, s)
}

func autoConvert_v1alpha1_NodeList_To_infra_NodeList(in *NodeList, out *infra.NodeList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.Node, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Node_To_infra_Node(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_NodeList_To_infra_NodeList is an autogenerated conversion function.
func Convert_v1alpha1_NodeList_To_infra_NodeList(in *NodeList, out *infra.NodeList, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeList_To_infra_NodeList(in, out, s)
}

func autoConvert_infra_NodeList_To_v1alpha1_NodeList(in *infra.NodeList, out *NodeList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Node, len(*in))
		for i := range *in {
			if err := Convert_infra_Node_To_v1alpha1_Node(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_NodeList_To_v1alpha1_NodeList is an autogenerated conversion function.
func Convert_infra_NodeList_To_v1alpha1_NodeList(in *infra.NodeList, out *NodeList, s conversion.Scope) error {
	return autoConvert_infra_NodeList_To_v1alpha1_NodeList(in, out, s)
}

func autoConvert_v1alpha1_NodeSet_To_infra_NodeSet(in *NodeSet, out *infra.NodeSet, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_NodeSetSpec_To_infra_NodeSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_NodeSetStatus_To_infra_NodeSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_NodeSet_To_infra_NodeSet is an autogenerated conversion function.
func Convert_v1alpha1_NodeSet_To_infra_NodeSet(in *NodeSet, out *infra.NodeSet, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeSet_To_infra_NodeSet(in, out, s)
}

func autoConvert_infra_NodeSet_To_v1alpha1_NodeSet(in *infra.NodeSet, out *NodeSet, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_NodeSetSpec_To_v1alpha1_NodeSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_NodeSetStatus_To_v1alpha1_NodeSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_NodeSet_To_v1alpha1_NodeSet is an autogenerated conversion function.
func Convert_infra_NodeSet_To_v1alpha1_NodeSet(in *infra.NodeSet, out *NodeSet, s conversion.Scope) error {
	return autoConvert_infra_NodeSet_To_v1alpha1_NodeSet(in, out, s)
}

func autoConvert_v1alpha1_NodeSetList_To_infra_NodeSetList(in *NodeSetList, out *infra.NodeSetList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.NodeSet, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_NodeSet_To_infra_NodeSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_NodeSetList_To_infra_NodeSetList is an autogenerated conversion function.
func Convert_v1alpha1_NodeSetList_To_infra_NodeSetList(in *NodeSetList, out *infra.NodeSetList, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeSetList_To_infra_NodeSetList(in, out, s)
}

func autoConvert_infra_NodeSetList_To_v1alpha1_NodeSetList(in *infra.NodeSetList, out *NodeSetList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeSet, len(*in))
		for i := range *in {
			if err := Convert_infra_NodeSet_To_v1alpha1_NodeSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_NodeSetList_To_v1alpha1_NodeSetList is an autogenerated conversion function.
func Convert_infra_NodeSetList_To_v1alpha1_NodeSetList(in *infra.NodeSetList, out *NodeSetList, s conversion.Scope) error {
	return autoConvert_infra_NodeSetList_To_v1alpha1_NodeSetList(in, out, s)
}

func autoConvert_v1alpha1_NodeSetSpec_To_infra_NodeSetSpec(in *NodeSetSpec, out *infra.NodeSetSpec, s conversion.Scope) error {
	out.NodeSet = in.NodeSet
	if err := Convert_v1alpha1_PartitionClusterID_To_id_PartitionClusterID(&in.PartitionClusterID, &out.PartitionClusterID, s); err != nil {
		return err
	}
	if err := asv1alpha1.Convert_v1alpha1_ClaimLabels_To_common_ClaimLabels(&in.ClaimLabels, &out.ClaimLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_NodeSetSpec_To_infra_NodeSetSpec is an autogenerated conversion function.
func Convert_v1alpha1_NodeSetSpec_To_infra_NodeSetSpec(in *NodeSetSpec, out *infra.NodeSetSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeSetSpec_To_infra_NodeSetSpec(in, out, s)
}

func autoConvert_infra_NodeSetSpec_To_v1alpha1_NodeSetSpec(in *infra.NodeSetSpec, out *NodeSetSpec, s conversion.Scope) error {
	out.NodeSet = in.NodeSet
	if err := Convert_id_PartitionClusterID_To_v1alpha1_PartitionClusterID(&in.PartitionClusterID, &out.PartitionClusterID, s); err != nil {
		return err
	}
	if err := asv1alpha1.Convert_common_ClaimLabels_To_v1alpha1_ClaimLabels(&in.ClaimLabels, &out.ClaimLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_NodeSetSpec_To_v1alpha1_NodeSetSpec is an autogenerated conversion function.
func Convert_infra_NodeSetSpec_To_v1alpha1_NodeSetSpec(in *infra.NodeSetSpec, out *NodeSetSpec, s conversion.Scope) error {
	return autoConvert_infra_NodeSetSpec_To_v1alpha1_NodeSetSpec(in, out, s)
}

func autoConvert_v1alpha1_NodeSetStatus_To_infra_NodeSetStatus(in *NodeSetStatus, out *infra.NodeSetStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_NodeSetStatus_To_infra_NodeSetStatus is an autogenerated conversion function.
func Convert_v1alpha1_NodeSetStatus_To_infra_NodeSetStatus(in *NodeSetStatus, out *infra.NodeSetStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeSetStatus_To_infra_NodeSetStatus(in, out, s)
}

func autoConvert_infra_NodeSetStatus_To_v1alpha1_NodeSetStatus(in *infra.NodeSetStatus, out *NodeSetStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_NodeSetStatus_To_v1alpha1_NodeSetStatus is an autogenerated conversion function.
func Convert_infra_NodeSetStatus_To_v1alpha1_NodeSetStatus(in *infra.NodeSetStatus, out *NodeSetStatus, s conversion.Scope) error {
	return autoConvert_infra_NodeSetStatus_To_v1alpha1_NodeSetStatus(in, out, s)
}

func autoConvert_v1alpha1_NodeSpec_To_infra_NodeSpec(in *NodeSpec, out *infra.NodeSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_PartitionNodeID_To_id_PartitionNodeID(&in.PartitionNodeID, &out.PartitionNodeID, s); err != nil {
		return err
	}
	out.Rack = (*string)(unsafe.Pointer(in.Rack))
	out.Position = (*string)(unsafe.Pointer(in.Position))
	out.Location = (*infra.Location)(unsafe.Pointer(in.Location))
	out.Provider = in.Provider
	out.PlatformType = in.PlatformType
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_NodeSpec_To_infra_NodeSpec is an autogenerated conversion function.
func Convert_v1alpha1_NodeSpec_To_infra_NodeSpec(in *NodeSpec, out *infra.NodeSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeSpec_To_infra_NodeSpec(in, out, s)
}

func autoConvert_infra_NodeSpec_To_v1alpha1_NodeSpec(in *infra.NodeSpec, out *NodeSpec, s conversion.Scope) error {
	if err := Convert_id_PartitionNodeID_To_v1alpha1_PartitionNodeID(&in.PartitionNodeID, &out.PartitionNodeID, s); err != nil {
		return err
	}
	out.Rack = (*string)(unsafe.Pointer(in.Rack))
	out.Position = (*string)(unsafe.Pointer(in.Position))
	out.Location = (*Location)(unsafe.Pointer(in.Location))
	out.Provider = in.Provider
	out.PlatformType = in.PlatformType
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_NodeSpec_To_v1alpha1_NodeSpec is an autogenerated conversion function.
func Convert_infra_NodeSpec_To_v1alpha1_NodeSpec(in *infra.NodeSpec, out *NodeSpec, s conversion.Scope) error {
	return autoConvert_infra_NodeSpec_To_v1alpha1_NodeSpec(in, out, s)
}

func autoConvert_v1alpha1_NodeStatus_To_infra_NodeStatus(in *NodeStatus, out *infra.NodeStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	out.SystemID = (*string)(unsafe.Pointer(in.SystemID))
	return nil
}

// Convert_v1alpha1_NodeStatus_To_infra_NodeStatus is an autogenerated conversion function.
func Convert_v1alpha1_NodeStatus_To_infra_NodeStatus(in *NodeStatus, out *infra.NodeStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeStatus_To_infra_NodeStatus(in, out, s)
}

func autoConvert_infra_NodeStatus_To_v1alpha1_NodeStatus(in *infra.NodeStatus, out *NodeStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	out.SystemID = (*string)(unsafe.Pointer(in.SystemID))
	return nil
}

// Convert_infra_NodeStatus_To_v1alpha1_NodeStatus is an autogenerated conversion function.
func Convert_infra_NodeStatus_To_v1alpha1_NodeStatus(in *infra.NodeStatus, out *NodeStatus, s conversion.Scope) error {
	return autoConvert_infra_NodeStatus_To_v1alpha1_NodeStatus(in, out, s)
}

func autoConvert_v1alpha1_Partition_To_infra_Partition(in *Partition, out *infra.Partition, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_PartitionSpec_To_infra_PartitionSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_PartitionStatus_To_infra_PartitionStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Partition_To_infra_Partition is an autogenerated conversion function.
func Convert_v1alpha1_Partition_To_infra_Partition(in *Partition, out *infra.Partition, s conversion.Scope) error {
	return autoConvert_v1alpha1_Partition_To_infra_Partition(in, out, s)
}

func autoConvert_infra_Partition_To_v1alpha1_Partition(in *infra.Partition, out *Partition, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_PartitionSpec_To_v1alpha1_PartitionSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_PartitionStatus_To_v1alpha1_PartitionStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_Partition_To_v1alpha1_Partition is an autogenerated conversion function.
func Convert_infra_Partition_To_v1alpha1_Partition(in *infra.Partition, out *Partition, s conversion.Scope) error {
	return autoConvert_infra_Partition_To_v1alpha1_Partition(in, out, s)
}

func autoConvert_v1alpha1_PartitionList_To_infra_PartitionList(in *PartitionList, out *infra.PartitionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.Partition, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Partition_To_infra_Partition(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_PartitionList_To_infra_PartitionList is an autogenerated conversion function.
func Convert_v1alpha1_PartitionList_To_infra_PartitionList(in *PartitionList, out *infra.PartitionList, s conversion.Scope) error {
	return autoConvert_v1alpha1_PartitionList_To_infra_PartitionList(in, out, s)
}

func autoConvert_infra_PartitionList_To_v1alpha1_PartitionList(in *infra.PartitionList, out *PartitionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Partition, len(*in))
		for i := range *in {
			if err := Convert_infra_Partition_To_v1alpha1_Partition(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_PartitionList_To_v1alpha1_PartitionList is an autogenerated conversion function.
func Convert_infra_PartitionList_To_v1alpha1_PartitionList(in *infra.PartitionList, out *PartitionList, s conversion.Scope) error {
	return autoConvert_infra_PartitionList_To_v1alpha1_PartitionList(in, out, s)
}

func autoConvert_v1alpha1_PartitionSpec_To_infra_PartitionSpec(in *PartitionSpec, out *infra.PartitionSpec, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_PartitionSpec_To_infra_PartitionSpec is an autogenerated conversion function.
func Convert_v1alpha1_PartitionSpec_To_infra_PartitionSpec(in *PartitionSpec, out *infra.PartitionSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_PartitionSpec_To_infra_PartitionSpec(in, out, s)
}

func autoConvert_infra_PartitionSpec_To_v1alpha1_PartitionSpec(in *infra.PartitionSpec, out *PartitionSpec, s conversion.Scope) error {
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_PartitionSpec_To_v1alpha1_PartitionSpec is an autogenerated conversion function.
func Convert_infra_PartitionSpec_To_v1alpha1_PartitionSpec(in *infra.PartitionSpec, out *PartitionSpec, s conversion.Scope) error {
	return autoConvert_infra_PartitionSpec_To_v1alpha1_PartitionSpec(in, out, s)
}

func autoConvert_v1alpha1_PartitionStatus_To_infra_PartitionStatus(in *PartitionStatus, out *infra.PartitionStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_PartitionStatus_To_infra_PartitionStatus is an autogenerated conversion function.
func Convert_v1alpha1_PartitionStatus_To_infra_PartitionStatus(in *PartitionStatus, out *infra.PartitionStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_PartitionStatus_To_infra_PartitionStatus(in, out, s)
}

func autoConvert_infra_PartitionStatus_To_v1alpha1_PartitionStatus(in *infra.PartitionStatus, out *PartitionStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_PartitionStatus_To_v1alpha1_PartitionStatus is an autogenerated conversion function.
func Convert_infra_PartitionStatus_To_v1alpha1_PartitionStatus(in *infra.PartitionStatus, out *PartitionStatus, s conversion.Scope) error {
	return autoConvert_infra_PartitionStatus_To_v1alpha1_PartitionStatus(in, out, s)
}

func autoConvert_v1alpha1_Port_To_infra_Port(in *Port, out *infra.Port, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_PortSpec_To_infra_PortSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_PortStatus_To_infra_PortStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Port_To_infra_Port is an autogenerated conversion function.
func Convert_v1alpha1_Port_To_infra_Port(in *Port, out *infra.Port, s conversion.Scope) error {
	return autoConvert_v1alpha1_Port_To_infra_Port(in, out, s)
}

func autoConvert_infra_Port_To_v1alpha1_Port(in *infra.Port, out *Port, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_PortSpec_To_v1alpha1_PortSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_PortStatus_To_v1alpha1_PortStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_Port_To_v1alpha1_Port is an autogenerated conversion function.
func Convert_infra_Port_To_v1alpha1_Port(in *infra.Port, out *Port, s conversion.Scope) error {
	return autoConvert_infra_Port_To_v1alpha1_Port(in, out, s)
}

func autoConvert_v1alpha1_PortList_To_infra_PortList(in *PortList, out *infra.PortList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.Port, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Port_To_infra_Port(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_PortList_To_infra_PortList is an autogenerated conversion function.
func Convert_v1alpha1_PortList_To_infra_PortList(in *PortList, out *infra.PortList, s conversion.Scope) error {
	return autoConvert_v1alpha1_PortList_To_infra_PortList(in, out, s)
}

func autoConvert_infra_PortList_To_v1alpha1_PortList(in *infra.PortList, out *PortList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Port, len(*in))
		for i := range *in {
			if err := Convert_infra_Port_To_v1alpha1_Port(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_PortList_To_v1alpha1_PortList is an autogenerated conversion function.
func Convert_infra_PortList_To_v1alpha1_PortList(in *infra.PortList, out *PortList, s conversion.Scope) error {
	return autoConvert_infra_PortList_To_v1alpha1_PortList(in, out, s)
}

func autoConvert_v1alpha1_PortSpec_To_infra_PortSpec(in *PortSpec, out *infra.PortSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_PartitionPortID_To_id_PartitionPortID(&in.PartitionPortID, &out.PartitionPortID, s); err != nil {
		return err
	}
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_PortSpec_To_infra_PortSpec is an autogenerated conversion function.
func Convert_v1alpha1_PortSpec_To_infra_PortSpec(in *PortSpec, out *infra.PortSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_PortSpec_To_infra_PortSpec(in, out, s)
}

func autoConvert_infra_PortSpec_To_v1alpha1_PortSpec(in *infra.PortSpec, out *PortSpec, s conversion.Scope) error {
	if err := Convert_id_PartitionPortID_To_v1alpha1_PartitionPortID(&in.PartitionPortID, &out.PartitionPortID, s); err != nil {
		return err
	}
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_PortSpec_To_v1alpha1_PortSpec is an autogenerated conversion function.
func Convert_infra_PortSpec_To_v1alpha1_PortSpec(in *infra.PortSpec, out *PortSpec, s conversion.Scope) error {
	return autoConvert_infra_PortSpec_To_v1alpha1_PortSpec(in, out, s)
}

func autoConvert_v1alpha1_PortStatus_To_infra_PortStatus(in *PortStatus, out *infra.PortStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_PortStatus_To_infra_PortStatus is an autogenerated conversion function.
func Convert_v1alpha1_PortStatus_To_infra_PortStatus(in *PortStatus, out *infra.PortStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_PortStatus_To_infra_PortStatus(in, out, s)
}

func autoConvert_infra_PortStatus_To_v1alpha1_PortStatus(in *infra.PortStatus, out *PortStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_PortStatus_To_v1alpha1_PortStatus is an autogenerated conversion function.
func Convert_infra_PortStatus_To_v1alpha1_PortStatus(in *infra.PortStatus, out *PortStatus, s conversion.Scope) error {
	return autoConvert_infra_PortStatus_To_v1alpha1_PortStatus(in, out, s)
}

func autoConvert_v1alpha1_Rack_To_infra_Rack(in *Rack, out *infra.Rack, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_RackSpec_To_infra_RackSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_RackStatus_To_infra_RackStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Rack_To_infra_Rack is an autogenerated conversion function.
func Convert_v1alpha1_Rack_To_infra_Rack(in *Rack, out *infra.Rack, s conversion.Scope) error {
	return autoConvert_v1alpha1_Rack_To_infra_Rack(in, out, s)
}

func autoConvert_infra_Rack_To_v1alpha1_Rack(in *infra.Rack, out *Rack, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_RackSpec_To_v1alpha1_RackSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_RackStatus_To_v1alpha1_RackStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_Rack_To_v1alpha1_Rack is an autogenerated conversion function.
func Convert_infra_Rack_To_v1alpha1_Rack(in *infra.Rack, out *Rack, s conversion.Scope) error {
	return autoConvert_infra_Rack_To_v1alpha1_Rack(in, out, s)
}

func autoConvert_v1alpha1_RackList_To_infra_RackList(in *RackList, out *infra.RackList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.Rack, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Rack_To_infra_Rack(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_RackList_To_infra_RackList is an autogenerated conversion function.
func Convert_v1alpha1_RackList_To_infra_RackList(in *RackList, out *infra.RackList, s conversion.Scope) error {
	return autoConvert_v1alpha1_RackList_To_infra_RackList(in, out, s)
}

func autoConvert_infra_RackList_To_v1alpha1_RackList(in *infra.RackList, out *RackList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Rack, len(*in))
		for i := range *in {
			if err := Convert_infra_Rack_To_v1alpha1_Rack(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_RackList_To_v1alpha1_RackList is an autogenerated conversion function.
func Convert_infra_RackList_To_v1alpha1_RackList(in *infra.RackList, out *RackList, s conversion.Scope) error {
	return autoConvert_infra_RackList_To_v1alpha1_RackList(in, out, s)
}

func autoConvert_v1alpha1_RackSpec_To_infra_RackSpec(in *RackSpec, out *infra.RackSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_SiteID_To_id_SiteID(&in.SiteID, &out.SiteID, s); err != nil {
		return err
	}
	out.Location = (*infra.Location)(unsafe.Pointer(in.Location))
	out.Height = in.Height
	out.Width = in.Width
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_RackSpec_To_infra_RackSpec is an autogenerated conversion function.
func Convert_v1alpha1_RackSpec_To_infra_RackSpec(in *RackSpec, out *infra.RackSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_RackSpec_To_infra_RackSpec(in, out, s)
}

func autoConvert_infra_RackSpec_To_v1alpha1_RackSpec(in *infra.RackSpec, out *RackSpec, s conversion.Scope) error {
	if err := Convert_id_SiteID_To_v1alpha1_SiteID(&in.SiteID, &out.SiteID, s); err != nil {
		return err
	}
	out.Location = (*Location)(unsafe.Pointer(in.Location))
	out.Height = in.Height
	out.Width = in.Width
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_RackSpec_To_v1alpha1_RackSpec is an autogenerated conversion function.
func Convert_infra_RackSpec_To_v1alpha1_RackSpec(in *infra.RackSpec, out *RackSpec, s conversion.Scope) error {
	return autoConvert_infra_RackSpec_To_v1alpha1_RackSpec(in, out, s)
}

func autoConvert_v1alpha1_RackStatus_To_infra_RackStatus(in *RackStatus, out *infra.RackStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_RackStatus_To_infra_RackStatus is an autogenerated conversion function.
func Convert_v1alpha1_RackStatus_To_infra_RackStatus(in *RackStatus, out *infra.RackStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_RackStatus_To_infra_RackStatus(in, out, s)
}

func autoConvert_infra_RackStatus_To_v1alpha1_RackStatus(in *infra.RackStatus, out *RackStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_RackStatus_To_v1alpha1_RackStatus is an autogenerated conversion function.
func Convert_infra_RackStatus_To_v1alpha1_RackStatus(in *infra.RackStatus, out *RackStatus, s conversion.Scope) error {
	return autoConvert_infra_RackStatus_To_v1alpha1_RackStatus(in, out, s)
}

func autoConvert_v1alpha1_Region_To_infra_Region(in *Region, out *infra.Region, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_RegionSpec_To_infra_RegionSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_RegionStatus_To_infra_RegionStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Region_To_infra_Region is an autogenerated conversion function.
func Convert_v1alpha1_Region_To_infra_Region(in *Region, out *infra.Region, s conversion.Scope) error {
	return autoConvert_v1alpha1_Region_To_infra_Region(in, out, s)
}

func autoConvert_infra_Region_To_v1alpha1_Region(in *infra.Region, out *Region, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_RegionSpec_To_v1alpha1_RegionSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_RegionStatus_To_v1alpha1_RegionStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_Region_To_v1alpha1_Region is an autogenerated conversion function.
func Convert_infra_Region_To_v1alpha1_Region(in *infra.Region, out *Region, s conversion.Scope) error {
	return autoConvert_infra_Region_To_v1alpha1_Region(in, out, s)
}

func autoConvert_v1alpha1_RegionList_To_infra_RegionList(in *RegionList, out *infra.RegionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.Region, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Region_To_infra_Region(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_RegionList_To_infra_RegionList is an autogenerated conversion function.
func Convert_v1alpha1_RegionList_To_infra_RegionList(in *RegionList, out *infra.RegionList, s conversion.Scope) error {
	return autoConvert_v1alpha1_RegionList_To_infra_RegionList(in, out, s)
}

func autoConvert_infra_RegionList_To_v1alpha1_RegionList(in *infra.RegionList, out *RegionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Region, len(*in))
		for i := range *in {
			if err := Convert_infra_Region_To_v1alpha1_Region(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_RegionList_To_v1alpha1_RegionList is an autogenerated conversion function.
func Convert_infra_RegionList_To_v1alpha1_RegionList(in *infra.RegionList, out *RegionList, s conversion.Scope) error {
	return autoConvert_infra_RegionList_To_v1alpha1_RegionList(in, out, s)
}

func autoConvert_v1alpha1_RegionSpec_To_infra_RegionSpec(in *RegionSpec, out *infra.RegionSpec, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_RegionSpec_To_infra_RegionSpec is an autogenerated conversion function.
func Convert_v1alpha1_RegionSpec_To_infra_RegionSpec(in *RegionSpec, out *infra.RegionSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_RegionSpec_To_infra_RegionSpec(in, out, s)
}

func autoConvert_infra_RegionSpec_To_v1alpha1_RegionSpec(in *infra.RegionSpec, out *RegionSpec, s conversion.Scope) error {
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_RegionSpec_To_v1alpha1_RegionSpec is an autogenerated conversion function.
func Convert_infra_RegionSpec_To_v1alpha1_RegionSpec(in *infra.RegionSpec, out *RegionSpec, s conversion.Scope) error {
	return autoConvert_infra_RegionSpec_To_v1alpha1_RegionSpec(in, out, s)
}

func autoConvert_v1alpha1_RegionStatus_To_infra_RegionStatus(in *RegionStatus, out *infra.RegionStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_RegionStatus_To_infra_RegionStatus is an autogenerated conversion function.
func Convert_v1alpha1_RegionStatus_To_infra_RegionStatus(in *RegionStatus, out *infra.RegionStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_RegionStatus_To_infra_RegionStatus(in, out, s)
}

func autoConvert_infra_RegionStatus_To_v1alpha1_RegionStatus(in *infra.RegionStatus, out *RegionStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_RegionStatus_To_v1alpha1_RegionStatus is an autogenerated conversion function.
func Convert_infra_RegionStatus_To_v1alpha1_RegionStatus(in *infra.RegionStatus, out *RegionStatus, s conversion.Scope) error {
	return autoConvert_infra_RegionStatus_To_v1alpha1_RegionStatus(in, out, s)
}

func autoConvert_v1alpha1_Site_To_infra_Site(in *Site, out *infra.Site, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_SiteSpec_To_infra_SiteSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_SiteStatus_To_infra_SiteStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Site_To_infra_Site is an autogenerated conversion function.
func Convert_v1alpha1_Site_To_infra_Site(in *Site, out *infra.Site, s conversion.Scope) error {
	return autoConvert_v1alpha1_Site_To_infra_Site(in, out, s)
}

func autoConvert_infra_Site_To_v1alpha1_Site(in *infra.Site, out *Site, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_infra_SiteSpec_To_v1alpha1_SiteSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_infra_SiteStatus_To_v1alpha1_SiteStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_Site_To_v1alpha1_Site is an autogenerated conversion function.
func Convert_infra_Site_To_v1alpha1_Site(in *infra.Site, out *Site, s conversion.Scope) error {
	return autoConvert_infra_Site_To_v1alpha1_Site(in, out, s)
}

func autoConvert_v1alpha1_SiteList_To_infra_SiteList(in *SiteList, out *infra.SiteList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]infra.Site, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Site_To_infra_Site(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_SiteList_To_infra_SiteList is an autogenerated conversion function.
func Convert_v1alpha1_SiteList_To_infra_SiteList(in *SiteList, out *infra.SiteList, s conversion.Scope) error {
	return autoConvert_v1alpha1_SiteList_To_infra_SiteList(in, out, s)
}

func autoConvert_infra_SiteList_To_v1alpha1_SiteList(in *infra.SiteList, out *SiteList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Site, len(*in))
		for i := range *in {
			if err := Convert_infra_Site_To_v1alpha1_Site(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_infra_SiteList_To_v1alpha1_SiteList is an autogenerated conversion function.
func Convert_infra_SiteList_To_v1alpha1_SiteList(in *infra.SiteList, out *SiteList, s conversion.Scope) error {
	return autoConvert_infra_SiteList_To_v1alpha1_SiteList(in, out, s)
}

func autoConvert_v1alpha1_SiteSpec_To_infra_SiteSpec(in *SiteSpec, out *infra.SiteSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_SiteID_To_id_SiteID(&in.SiteID, &out.SiteID, s); err != nil {
		return err
	}
	out.Location = (*infra.Location)(unsafe.Pointer(in.Location))
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_SiteSpec_To_infra_SiteSpec is an autogenerated conversion function.
func Convert_v1alpha1_SiteSpec_To_infra_SiteSpec(in *SiteSpec, out *infra.SiteSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_SiteSpec_To_infra_SiteSpec(in, out, s)
}

func autoConvert_infra_SiteSpec_To_v1alpha1_SiteSpec(in *infra.SiteSpec, out *SiteSpec, s conversion.Scope) error {
	if err := Convert_id_SiteID_To_v1alpha1_SiteID(&in.SiteID, &out.SiteID, s); err != nil {
		return err
	}
	out.Location = (*Location)(unsafe.Pointer(in.Location))
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_SiteSpec_To_v1alpha1_SiteSpec is an autogenerated conversion function.
func Convert_infra_SiteSpec_To_v1alpha1_SiteSpec(in *infra.SiteSpec, out *SiteSpec, s conversion.Scope) error {
	return autoConvert_infra_SiteSpec_To_v1alpha1_SiteSpec(in, out, s)
}

func autoConvert_v1alpha1_SiteStatus_To_infra_SiteStatus(in *SiteStatus, out *infra.SiteStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_SiteStatus_To_infra_SiteStatus is an autogenerated conversion function.
func Convert_v1alpha1_SiteStatus_To_infra_SiteStatus(in *SiteStatus, out *infra.SiteStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_SiteStatus_To_infra_SiteStatus(in, out, s)
}

func autoConvert_infra_SiteStatus_To_v1alpha1_SiteStatus(in *infra.SiteStatus, out *SiteStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_infra_SiteStatus_To_v1alpha1_SiteStatus is an autogenerated conversion function.
func Convert_infra_SiteStatus_To_v1alpha1_SiteStatus(in *infra.SiteStatus, out *SiteStatus, s conversion.Scope) error {
	return autoConvert_infra_SiteStatus_To_v1alpha1_SiteStatus(in, out, s)
}

//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2024 Nokia.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	backend "github.com/kuidio/kuid/apis/backend"
	asv1alpha1 "github.com/kuidio/kuid/apis/backend/as/v1alpha1"
	vlan "github.com/kuidio/kuid/apis/backend/vlan"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*VLANClaim)(nil), (*vlan.VLANClaim)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANClaim_To_vlan_VLANClaim(a.(*VLANClaim), b.(*vlan.VLANClaim), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANClaim)(nil), (*VLANClaim)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANClaim_To_v1alpha1_VLANClaim(a.(*vlan.VLANClaim), b.(*VLANClaim), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VLANClaimList)(nil), (*vlan.VLANClaimList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANClaimList_To_vlan_VLANClaimList(a.(*VLANClaimList), b.(*vlan.VLANClaimList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANClaimList)(nil), (*VLANClaimList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANClaimList_To_v1alpha1_VLANClaimList(a.(*vlan.VLANClaimList), b.(*VLANClaimList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VLANClaimSpec)(nil), (*vlan.VLANClaimSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANClaimSpec_To_vlan_VLANClaimSpec(a.(*VLANClaimSpec), b.(*vlan.VLANClaimSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANClaimSpec)(nil), (*VLANClaimSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANClaimSpec_To_v1alpha1_VLANClaimSpec(a.(*vlan.VLANClaimSpec), b.(*VLANClaimSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VLANClaimStatus)(nil), (*vlan.VLANClaimStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANClaimStatus_To_vlan_VLANClaimStatus(a.(*VLANClaimStatus), b.(*vlan.VLANClaimStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANClaimStatus)(nil), (*VLANClaimStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANClaimStatus_To_v1alpha1_VLANClaimStatus(a.(*vlan.VLANClaimStatus), b.(*VLANClaimStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VLANEntry)(nil), (*vlan.VLANEntry)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANEntry_To_vlan_VLANEntry(a.(*VLANEntry), b.(*vlan.VLANEntry), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANEntry)(nil), (*VLANEntry)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANEntry_To_v1alpha1_VLANEntry(a.(*vlan.VLANEntry), b.(*VLANEntry), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VLANEntryList)(nil), (*vlan.VLANEntryList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANEntryList_To_vlan_VLANEntryList(a.(*VLANEntryList), b.(*vlan.VLANEntryList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANEntryList)(nil), (*VLANEntryList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANEntryList_To_v1alpha1_VLANEntryList(a.(*vlan.VLANEntryList), b.(*VLANEntryList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VLANEntrySpec)(nil), (*vlan.VLANEntrySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANEntrySpec_To_vlan_VLANEntrySpec(a.(*VLANEntrySpec), b.(*vlan.VLANEntrySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANEntrySpec)(nil), (*VLANEntrySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANEntrySpec_To_v1alpha1_VLANEntrySpec(a.(*vlan.VLANEntrySpec), b.(*VLANEntrySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VLANEntryStatus)(nil), (*vlan.VLANEntryStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANEntryStatus_To_vlan_VLANEntryStatus(a.(*VLANEntryStatus), b.(*vlan.VLANEntryStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANEntryStatus)(nil), (*VLANEntryStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANEntryStatus_To_v1alpha1_VLANEntryStatus(a.(*vlan.VLANEntryStatus), b.(*VLANEntryStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VLANIndex)(nil), (*vlan.VLANIndex)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANIndex_To_vlan_VLANIndex(a.(*VLANIndex), b.(*vlan.VLANIndex), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANIndex)(nil), (*VLANIndex)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANIndex_To_v1alpha1_VLANIndex(a.(*vlan.VLANIndex), b.(*VLANIndex), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VLANIndexClaim)(nil), (*vlan.VLANIndexClaim)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANIndexClaim_To_vlan_VLANIndexClaim(a.(*VLANIndexClaim), b.(*vlan.VLANIndexClaim), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANIndexClaim)(nil), (*VLANIndexClaim)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANIndexClaim_To_v1alpha1_VLANIndexClaim(a.(*vlan.VLANIndexClaim), b.(*VLANIndexClaim), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VLANIndexList)(nil), (*vlan.VLANIndexList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANIndexList_To_vlan_VLANIndexList(a.(*VLANIndexList), b.(*vlan.VLANIndexList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANIndexList)(nil), (*VLANIndexList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANIndexList_To_v1alpha1_VLANIndexList(a.(*vlan.VLANIndexList), b.(*VLANIndexList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VLANIndexSpec)(nil), (*vlan.VLANIndexSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANIndexSpec_To_vlan_VLANIndexSpec(a.(*VLANIndexSpec), b.(*vlan.VLANIndexSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANIndexSpec)(nil), (*VLANIndexSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANIndexSpec_To_v1alpha1_VLANIndexSpec(a.(*vlan.VLANIndexSpec), b.(*VLANIndexSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VLANIndexStatus)(nil), (*vlan.VLANIndexStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VLANIndexStatus_To_vlan_VLANIndexStatus(a.(*VLANIndexStatus), b.(*vlan.VLANIndexStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*vlan.VLANIndexStatus)(nil), (*VLANIndexStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_vlan_VLANIndexStatus_To_v1alpha1_VLANIndexStatus(a.(*vlan.VLANIndexStatus), b.(*VLANIndexStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_VLANClaim_To_vlan_VLANClaim(in *VLANClaim, out *vlan.VLANClaim, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_VLANClaimSpec_To_vlan_VLANClaimSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_VLANClaimStatus_To_vlan_VLANClaimStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_VLANClaim_To_vlan_VLANClaim is an autogenerated conversion function.
func Convert_v1alpha1_VLANClaim_To_vlan_VLANClaim(in *VLANClaim, out *vlan.VLANClaim, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANClaim_To_vlan_VLANClaim(in, out, s)
}

func autoConvert_vlan_VLANClaim_To_v1alpha1_VLANClaim(in *vlan.VLANClaim, out *VLANClaim, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_vlan_VLANClaimSpec_To_v1alpha1_VLANClaimSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_vlan_VLANClaimStatus_To_v1alpha1_VLANClaimStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_vlan_VLANClaim_To_v1alpha1_VLANClaim is an autogenerated conversion function.
func Convert_vlan_VLANClaim_To_v1alpha1_VLANClaim(in *vlan.VLANClaim, out *VLANClaim, s conversion.Scope) error {
	return autoConvert_vlan_VLANClaim_To_v1alpha1_VLANClaim(in, out, s)
}

func autoConvert_v1alpha1_VLANClaimList_To_vlan_VLANClaimList(in *VLANClaimList, out *vlan.VLANClaimList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]vlan.VLANClaim, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_VLANClaim_To_vlan_VLANClaim(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_VLANClaimList_To_vlan_VLANClaimList is an autogenerated conversion function.
func Convert_v1alpha1_VLANClaimList_To_vlan_VLANClaimList(in *VLANClaimList, out *vlan.VLANClaimList, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANClaimList_To_vlan_VLANClaimList(in, out, s)
}

func autoConvert_vlan_VLANClaimList_To_v1alpha1_VLANClaimList(in *vlan.VLANClaimList, out *VLANClaimList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VLANClaim, len(*in))
		for i := range *in {
			if err := Convert_vlan_VLANClaim_To_v1alpha1_VLANClaim(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_vlan_VLANClaimList_To_v1alpha1_VLANClaimList is an autogenerated conversion function.
func Convert_vlan_VLANClaimList_To_v1alpha1_VLANClaimList(in *vlan.VLANClaimList, out *VLANClaimList, s conversion.Scope) error {
	return autoConvert_vlan_VLANClaimList_To_v1alpha1_VLANClaimList(in, out, s)
}

func autoConvert_v1alpha1_VLANClaimSpec_To_vlan_VLANClaimSpec(in *VLANClaimSpec, out *vlan.VLANClaimSpec, s conversion.Scope) error {
	out.Index = in.Index
	out.ID = (*uint32)(unsafe.Pointer(in.ID))
	out.Range = (*string)(unsafe.Pointer(in.Range))
	if err := asv1alpha1.Convert_v1alpha1_ClaimLabels_To_common_ClaimLabels(&in.ClaimLabels, &out.ClaimLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_VLANClaimSpec_To_vlan_VLANClaimSpec is an autogenerated conversion function.
func Convert_v1alpha1_VLANClaimSpec_To_vlan_VLANClaimSpec(in *VLANClaimSpec, out *vlan.VLANClaimSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANClaimSpec_To_vlan_VLANClaimSpec(in, out, s)
}

func autoConvert_vlan_VLANClaimSpec_To_v1alpha1_VLANClaimSpec(in *vlan.VLANClaimSpec, out *VLANClaimSpec, s conversion.Scope) error {
	out.Index = in.Index
	out.ID = (*uint32)(unsafe.Pointer(in.ID))
	out.Range = (*string)(unsafe.Pointer(in.Range))
	if err := asv1alpha1.Convert_common_ClaimLabels_To_v1alpha1_ClaimLabels(&in.ClaimLabels, &out.ClaimLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_vlan_VLANClaimSpec_To_v1alpha1_VLANClaimSpec is an autogenerated conversion function.
func Convert_vlan_VLANClaimSpec_To_v1alpha1_VLANClaimSpec(in *vlan.VLANClaimSpec, out *VLANClaimSpec, s conversion.Scope) error {
	return autoConvert_vlan_VLANClaimSpec_To_v1alpha1_VLANClaimSpec(in, out, s)
}

func autoConvert_v1alpha1_VLANClaimStatus_To_vlan_VLANClaimStatus(in *VLANClaimStatus, out *vlan.VLANClaimStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	out.ID = (*uint32)(unsafe.Pointer(in.ID))
	out.Range = (*string)(unsafe.Pointer(in.Range))
	out.ExpiryTime = (*string)(unsafe.Pointer(in.ExpiryTime))
	return nil
}

// Convert_v1alpha1_VLANClaimStatus_To_vlan_VLANClaimStatus is an autogenerated conversion function.
func Convert_v1alpha1_VLANClaimStatus_To_vlan_VLANClaimStatus(in *VLANClaimStatus, out *vlan.VLANClaimStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANClaimStatus_To_vlan_VLANClaimStatus(in, out, s)
}

func autoConvert_vlan_VLANClaimStatus_To_v1alpha1_VLANClaimStatus(in *vlan.VLANClaimStatus, out *VLANClaimStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	out.ID = (*uint32)(unsafe.Pointer(in.ID))
	out.Range = (*string)(unsafe.Pointer(in.Range))
	out.ExpiryTime = (*string)(unsafe.Pointer(in.ExpiryTime))
	return nil
}

// Convert_vlan_VLANClaimStatus_To_v1alpha1_VLANClaimStatus is an autogenerated conversion function.
func Convert_vlan_VLANClaimStatus_To_v1alpha1_VLANClaimStatus(in *vlan.VLANClaimStatus, out *VLANClaimStatus, s conversion.Scope) error {
	return autoConvert_vlan_VLANClaimStatus_To_v1alpha1_VLANClaimStatus(in, out, s)
}

func autoConvert_v1alpha1_VLANEntry_To_vlan_VLANEntry(in *VLANEntry, out *vlan.VLANEntry, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_VLANEntrySpec_To_vlan_VLANEntrySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_VLANEntryStatus_To_vlan_VLANEntryStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_VLANEntry_To_vlan_VLANEntry is an autogenerated conversion function.
func Convert_v1alpha1_VLANEntry_To_vlan_VLANEntry(in *VLANEntry, out *vlan.VLANEntry, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANEntry_To_vlan_VLANEntry(in, out, s)
}

func autoConvert_vlan_VLANEntry_To_v1alpha1_VLANEntry(in *vlan.VLANEntry, out *VLANEntry, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_vlan_VLANEntrySpec_To_v1alpha1_VLANEntrySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_vlan_VLANEntryStatus_To_v1alpha1_VLANEntryStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_vlan_VLANEntry_To_v1alpha1_VLANEntry is an autogenerated conversion function.
func Convert_vlan_VLANEntry_To_v1alpha1_VLANEntry(in *vlan.VLANEntry, out *VLANEntry, s conversion.Scope) error {
	return autoConvert_vlan_VLANEntry_To_v1alpha1_VLANEntry(in, out, s)
}

func autoConvert_v1alpha1_VLANEntryList_To_vlan_VLANEntryList(in *VLANEntryList, out *vlan.VLANEntryList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]vlan.VLANEntry, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_VLANEntry_To_vlan_VLANEntry(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_VLANEntryList_To_vlan_VLANEntryList is an autogenerated conversion function.
func Convert_v1alpha1_VLANEntryList_To_vlan_VLANEntryList(in *VLANEntryList, out *vlan.VLANEntryList, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANEntryList_To_vlan_VLANEntryList(in, out, s)
}

func autoConvert_vlan_VLANEntryList_To_v1alpha1_VLANEntryList(in *vlan.VLANEntryList, out *VLANEntryList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VLANEntry, len(*in))
		for i := range *in {
			if err := Convert_vlan_VLANEntry_To_v1alpha1_VLANEntry(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_vlan_VLANEntryList_To_v1alpha1_VLANEntryList is an autogenerated conversion function.
func Convert_vlan_VLANEntryList_To_v1alpha1_VLANEntryList(in *vlan.VLANEntryList, out *VLANEntryList, s conversion.Scope) error {
	return autoConvert_vlan_VLANEntryList_To_v1alpha1_VLANEntryList(in, out, s)
}

func autoConvert_v1alpha1_VLANEntrySpec_To_vlan_VLANEntrySpec(in *VLANEntrySpec, out *vlan.VLANEntrySpec, s conversion.Scope) error {
	out.Index = in.Index
	out.IndexEntry = in.IndexEntry
	out.ClaimType = backend.ClaimType(in.ClaimType)
	out.ID = in.ID
	if err := asv1alpha1.Convert_v1alpha1_ClaimLabels_To_common_ClaimLabels(&in.ClaimLabels, &out.ClaimLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_VLANEntrySpec_To_vlan_VLANEntrySpec is an autogenerated conversion function.
func Convert_v1alpha1_VLANEntrySpec_To_vlan_VLANEntrySpec(in *VLANEntrySpec, out *vlan.VLANEntrySpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANEntrySpec_To_vlan_VLANEntrySpec(in, out, s)
}

func autoConvert_vlan_VLANEntrySpec_To_v1alpha1_VLANEntrySpec(in *vlan.VLANEntrySpec, out *VLANEntrySpec, s conversion.Scope) error {
	out.Index = in.Index
	out.IndexEntry = in.IndexEntry
	out.ClaimType = backend.ClaimType(in.ClaimType)
	out.ID = in.ID
	if err := asv1alpha1.Convert_common_ClaimLabels_To_v1alpha1_ClaimLabels(&in.ClaimLabels, &out.ClaimLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_vlan_VLANEntrySpec_To_v1alpha1_VLANEntrySpec is an autogenerated conversion function.
func Convert_vlan_VLANEntrySpec_To_v1alpha1_VLANEntrySpec(in *vlan.VLANEntrySpec, out *VLANEntrySpec, s conversion.Scope) error {
	return autoConvert_vlan_VLANEntrySpec_To_v1alpha1_VLANEntrySpec(in, out, s)
}

func autoConvert_v1alpha1_VLANEntryStatus_To_vlan_VLANEntryStatus(in *VLANEntryStatus, out *vlan.VLANEntryStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_VLANEntryStatus_To_vlan_VLANEntryStatus is an autogenerated conversion function.
func Convert_v1alpha1_VLANEntryStatus_To_vlan_VLANEntryStatus(in *VLANEntryStatus, out *vlan.VLANEntryStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANEntryStatus_To_vlan_VLANEntryStatus(in, out, s)
}

func autoConvert_vlan_VLANEntryStatus_To_v1alpha1_VLANEntryStatus(in *vlan.VLANEntryStatus, out *VLANEntryStatus, s conversion.Scope) error {
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_vlan_VLANEntryStatus_To_v1alpha1_VLANEntryStatus is an autogenerated conversion function.
func Convert_vlan_VLANEntryStatus_To_v1alpha1_VLANEntryStatus(in *vlan.VLANEntryStatus, out *VLANEntryStatus, s conversion.Scope) error {
	return autoConvert_vlan_VLANEntryStatus_To_v1alpha1_VLANEntryStatus(in, out, s)
}

func autoConvert_v1alpha1_VLANIndex_To_vlan_VLANIndex(in *VLANIndex, out *vlan.VLANIndex, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_VLANIndexSpec_To_vlan_VLANIndexSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_VLANIndexStatus_To_vlan_VLANIndexStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_VLANIndex_To_vlan_VLANIndex is an autogenerated conversion function.
func Convert_v1alpha1_VLANIndex_To_vlan_VLANIndex(in *VLANIndex, out *vlan.VLANIndex, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANIndex_To_vlan_VLANIndex(in, out, s)
}

func autoConvert_vlan_VLANIndex_To_v1alpha1_VLANIndex(in *vlan.VLANIndex, out *VLANIndex, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_vlan_VLANIndexSpec_To_v1alpha1_VLANIndexSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_vlan_VLANIndexStatus_To_v1alpha1_VLANIndexStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_vlan_VLANIndex_To_v1alpha1_VLANIndex is an autogenerated conversion function.
func Convert_vlan_VLANIndex_To_v1alpha1_VLANIndex(in *vlan.VLANIndex, out *VLANIndex, s conversion.Scope) error {
	return autoConvert_vlan_VLANIndex_To_v1alpha1_VLANIndex(in, out, s)
}

func autoConvert_v1alpha1_VLANIndexClaim_To_vlan_VLANIndexClaim(in *VLANIndexClaim, out *vlan.VLANIndexClaim, s conversion.Scope) error {
	out.Name = in.Name
	out.ID = (*uint32)(unsafe.Pointer(in.ID))
	out.Range = (*string)(unsafe.Pointer(in.Range))
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_VLANIndexClaim_To_vlan_VLANIndexClaim is an autogenerated conversion function.
func Convert_v1alpha1_VLANIndexClaim_To_vlan_VLANIndexClaim(in *VLANIndexClaim, out *vlan.VLANIndexClaim, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANIndexClaim_To_vlan_VLANIndexClaim(in, out, s)
}

func autoConvert_vlan_VLANIndexClaim_To_v1alpha1_VLANIndexClaim(in *vlan.VLANIndexClaim, out *VLANIndexClaim, s conversion.Scope) error {
	out.Name = in.Name
	out.ID = (*uint32)(unsafe.Pointer(in.ID))
	out.Range = (*string)(unsafe.Pointer(in.Range))
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	return nil
}

// Convert_vlan_VLANIndexClaim_To_v1alpha1_VLANIndexClaim is an autogenerated conversion function.
func Convert_vlan_VLANIndexClaim_To_v1alpha1_VLANIndexClaim(in *vlan.VLANIndexClaim, out *VLANIndexClaim, s conversion.Scope) error {
	return autoConvert_vlan_VLANIndexClaim_To_v1alpha1_VLANIndexClaim(in, out, s)
}

func autoConvert_v1alpha1_VLANIndexList_To_vlan_VLANIndexList(in *VLANIndexList, out *vlan.VLANIndexList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]vlan.VLANIndex, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_VLANIndex_To_vlan_VLANIndex(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_VLANIndexList_To_vlan_VLANIndexList is an autogenerated conversion function.
func Convert_v1alpha1_VLANIndexList_To_vlan_VLANIndexList(in *VLANIndexList, out *vlan.VLANIndexList, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANIndexList_To_vlan_VLANIndexList(in, out, s)
}

func autoConvert_vlan_VLANIndexList_To_v1alpha1_VLANIndexList(in *vlan.VLANIndexList, out *VLANIndexList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VLANIndex, len(*in))
		for i := range *in {
			if err := Convert_vlan_VLANIndex_To_v1alpha1_VLANIndex(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_vlan_VLANIndexList_To_v1alpha1_VLANIndexList is an autogenerated conversion function.
func Convert_vlan_VLANIndexList_To_v1alpha1_VLANIndexList(in *vlan.VLANIndexList, out *VLANIndexList, s conversion.Scope) error {
	return autoConvert_vlan_VLANIndexList_To_v1alpha1_VLANIndexList(in, out, s)
}

func autoConvert_v1alpha1_VLANIndexSpec_To_vlan_VLANIndexSpec(in *VLANIndexSpec, out *vlan.VLANIndexSpec, s conversion.Scope) error {
	out.MinID = (*uint32)(unsafe.Pointer(in.MinID))
	out.MaxID = (*uint32)(unsafe.Pointer(in.MaxID))
	if err := asv1alpha1.Convert_v1alpha1_UserDefinedLabels_To_common_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	if in.Claims != nil {
		in, out := &in.Claims, &out.Claims
		*out = make([]vlan.VLANIndexClaim, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_VLANIndexClaim_To_vlan_VLANIndexClaim(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Claims = nil
	}
	return nil
}

// Convert_v1alpha1_VLANIndexSpec_To_vlan_VLANIndexSpec is an autogenerated conversion function.
func Convert_v1alpha1_VLANIndexSpec_To_vlan_VLANIndexSpec(in *VLANIndexSpec, out *vlan.VLANIndexSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANIndexSpec_To_vlan_VLANIndexSpec(in, out, s)
}

func autoConvert_vlan_VLANIndexSpec_To_v1alpha1_VLANIndexSpec(in *vlan.VLANIndexSpec, out *VLANIndexSpec, s conversion.Scope) error {
	out.MinID = (*uint32)(unsafe.Pointer(in.MinID))
	out.MaxID = (*uint32)(unsafe.Pointer(in.MaxID))
	if err := asv1alpha1.Convert_common_UserDefinedLabels_To_v1alpha1_UserDefinedLabels(&in.UserDefinedLabels, &out.UserDefinedLabels, s); err != nil {
		return err
	}
	if in.Claims != nil {
		in, out := &in.Claims, &out.Claims
		*out = make([]VLANIndexClaim, len(*in))
		for i := range *in {
			if err := Convert_vlan_VLANIndexClaim_To_v1alpha1_VLANIndexClaim(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Claims = nil
	}
	return nil
}

// Convert_vlan_VLANIndexSpec_To_v1alpha1_VLANIndexSpec is an autogenerated conversion function.
func Convert_vlan_VLANIndexSpec_To_v1alpha1_VLANIndexSpec(in *vlan.VLANIndexSpec, out *VLANIndexSpec, s conversion.Scope) error {
	return autoConvert_vlan_VLANIndexSpec_To_v1alpha1_VLANIndexSpec(in, out, s)
}

func autoConvert_v1alpha1_VLANIndexStatus_To_vlan_VLANIndexStatus(in *VLANIndexStatus, out *vlan.VLANIndexStatus, s conversion.Scope) error {
	out.MinID = (*uint32)(unsafe.Pointer(in.MinID))
	out.MaxID = (*uint32)(unsafe.Pointer(in.MaxID))
	if err := asv1alpha1.Convert_v1alpha1_ConditionedStatus_To_condition_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_VLANIndexStatus_To_vlan_VLANIndexStatus is an autogenerated conversion function.
func Convert_v1alpha1_VLANIndexStatus_To_vlan_VLANIndexStatus(in *VLANIndexStatus, out *vlan.VLANIndexStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_VLANIndexStatus_To_vlan_VLANIndexStatus(in, out, s)
}

func autoConvert_vlan_VLANIndexStatus_To_v1alpha1_VLANIndexStatus(in *vlan.VLANIndexStatus, out *VLANIndexStatus, s conversion.Scope) error {
	out.MinID = (*uint32)(unsafe.Pointer(in.MinID))
	out.MaxID = (*uint32)(unsafe.Pointer(in.MaxID))
	if err := asv1alpha1.Convert_condition_ConditionedStatus_To_v1alpha1_ConditionedStatus(&in.ConditionedStatus, &out.ConditionedStatus, s); err != nil {
		return err
	}
	return nil
}

// Convert_vlan_VLANIndexStatus_To_v1alpha1_VLANIndexStatus is an autogenerated conversion function.
func Convert_vlan_VLANIndexStatus_To_v1alpha1_VLANIndexStatus(in *vlan.VLANIndexStatus, out *VLANIndexStatus, s conversion.Scope) error {
	return autoConvert_vlan_VLANIndexStatus_To_v1alpha1_VLANIndexStatus(in, out, s)
}

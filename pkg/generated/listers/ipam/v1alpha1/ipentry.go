/*
Copyright 2024 Nokia.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kuidio/kuid/apis/backend/ipam/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// IPEntryLister helps list IPEntries.
// All objects returned here must be treated as read-only.
type IPEntryLister interface {
	// List lists all IPEntries in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.IPEntry, err error)
	// IPEntries returns an object that can list and get IPEntries.
	IPEntries(namespace string) IPEntryNamespaceLister
	IPEntryListerExpansion
}

// iPEntryLister implements the IPEntryLister interface.
type iPEntryLister struct {
	listers.ResourceIndexer[*v1alpha1.IPEntry]
}

// NewIPEntryLister returns a new IPEntryLister.
func NewIPEntryLister(indexer cache.Indexer) IPEntryLister {
	return &iPEntryLister{listers.New[*v1alpha1.IPEntry](indexer, v1alpha1.Resource("ipentry"))}
}

// IPEntries returns an object that can list and get IPEntries.
func (s *iPEntryLister) IPEntries(namespace string) IPEntryNamespaceLister {
	return iPEntryNamespaceLister{listers.NewNamespaced[*v1alpha1.IPEntry](s.ResourceIndexer, namespace)}
}

// IPEntryNamespaceLister helps list and get IPEntries.
// All objects returned here must be treated as read-only.
type IPEntryNamespaceLister interface {
	// List lists all IPEntries in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.IPEntry, err error)
	// Get retrieves the IPEntry from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.IPEntry, error)
	IPEntryNamespaceListerExpansion
}

// iPEntryNamespaceLister implements the IPEntryNamespaceLister
// interface.
type iPEntryNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.IPEntry]
}

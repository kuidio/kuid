/*
Copyright 2024 Nokia.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kuidio/kuid/apis/infra/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// RegionLister helps list Regions.
// All objects returned here must be treated as read-only.
type RegionLister interface {
	// List lists all Regions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Region, err error)
	// Regions returns an object that can list and get Regions.
	Regions(namespace string) RegionNamespaceLister
	RegionListerExpansion
}

// regionLister implements the RegionLister interface.
type regionLister struct {
	listers.ResourceIndexer[*v1alpha1.Region]
}

// NewRegionLister returns a new RegionLister.
func NewRegionLister(indexer cache.Indexer) RegionLister {
	return &regionLister{listers.New[*v1alpha1.Region](indexer, v1alpha1.Resource("region"))}
}

// Regions returns an object that can list and get Regions.
func (s *regionLister) Regions(namespace string) RegionNamespaceLister {
	return regionNamespaceLister{listers.NewNamespaced[*v1alpha1.Region](s.ResourceIndexer, namespace)}
}

// RegionNamespaceLister helps list and get Regions.
// All objects returned here must be treated as read-only.
type RegionNamespaceLister interface {
	// List lists all Regions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Region, err error)
	// Get retrieves the Region from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Region, error)
	RegionNamespaceListerExpansion
}

// regionNamespaceLister implements the RegionNamespaceLister
// interface.
type regionNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Region]
}

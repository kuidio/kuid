/*
Copyright 2024 Nokia.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kuidio/kuid/apis/infra/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// NodeItemLister helps list NodeItems.
// All objects returned here must be treated as read-only.
type NodeItemLister interface {
	// List lists all NodeItems in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NodeItem, err error)
	// NodeItems returns an object that can list and get NodeItems.
	NodeItems(namespace string) NodeItemNamespaceLister
	NodeItemListerExpansion
}

// nodeItemLister implements the NodeItemLister interface.
type nodeItemLister struct {
	listers.ResourceIndexer[*v1alpha1.NodeItem]
}

// NewNodeItemLister returns a new NodeItemLister.
func NewNodeItemLister(indexer cache.Indexer) NodeItemLister {
	return &nodeItemLister{listers.New[*v1alpha1.NodeItem](indexer, v1alpha1.Resource("nodeitem"))}
}

// NodeItems returns an object that can list and get NodeItems.
func (s *nodeItemLister) NodeItems(namespace string) NodeItemNamespaceLister {
	return nodeItemNamespaceLister{listers.NewNamespaced[*v1alpha1.NodeItem](s.ResourceIndexer, namespace)}
}

// NodeItemNamespaceLister helps list and get NodeItems.
// All objects returned here must be treated as read-only.
type NodeItemNamespaceLister interface {
	// List lists all NodeItems in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NodeItem, err error)
	// Get retrieves the NodeItem from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.NodeItem, error)
	NodeItemNamespaceListerExpansion
}

// nodeItemNamespaceLister implements the NodeItemNamespaceLister
// interface.
type nodeItemNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.NodeItem]
}

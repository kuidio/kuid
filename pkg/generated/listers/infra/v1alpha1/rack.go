/*
Copyright 2024 Nokia.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kuidio/kuid/apis/infra/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// RackLister helps list Racks.
// All objects returned here must be treated as read-only.
type RackLister interface {
	// List lists all Racks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Rack, err error)
	// Racks returns an object that can list and get Racks.
	Racks(namespace string) RackNamespaceLister
	RackListerExpansion
}

// rackLister implements the RackLister interface.
type rackLister struct {
	listers.ResourceIndexer[*v1alpha1.Rack]
}

// NewRackLister returns a new RackLister.
func NewRackLister(indexer cache.Indexer) RackLister {
	return &rackLister{listers.New[*v1alpha1.Rack](indexer, v1alpha1.Resource("rack"))}
}

// Racks returns an object that can list and get Racks.
func (s *rackLister) Racks(namespace string) RackNamespaceLister {
	return rackNamespaceLister{listers.NewNamespaced[*v1alpha1.Rack](s.ResourceIndexer, namespace)}
}

// RackNamespaceLister helps list and get Racks.
// All objects returned here must be treated as read-only.
type RackNamespaceLister interface {
	// List lists all Racks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Rack, err error)
	// Get retrieves the Rack from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Rack, error)
	RackNamespaceListerExpansion
}

// rackNamespaceLister implements the RackNamespaceLister
// interface.
type rackNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Rack]
}
